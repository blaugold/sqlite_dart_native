// ignore_for_file: unused_element
// coverage:ignore-start

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

@ffi.Native<ffi.Pointer<ffi.Char> Function()>(symbol: 'sqlite3_libversion')
external ffi.Pointer<ffi.Char> sqlite3_libversion();

@ffi.Native<ffi.Pointer<ffi.Char> Function()>(symbol: 'sqlite3_sourceid')
external ffi.Pointer<ffi.Char> sqlite3_sourceid();

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_libversion_number')
external int sqlite3_libversion_number();

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_compileoption_used')
external int sqlite3_compileoption_used(
  ffi.Pointer<ffi.Char> zOptName,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Int)>(
    symbol: 'sqlite3_compileoption_get')
external ffi.Pointer<ffi.Char> sqlite3_compileoption_get(
  int N,
);

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_threadsafe')
external int sqlite3_threadsafe();

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(symbol: 'sqlite3_close')
external int sqlite3_close(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(symbol: 'sqlite3_close_v2')
external int sqlite3_close_v2(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Int Function(
                    ffi.Pointer<ffi.Void>,
                    ffi.Int,
                    ffi.Pointer<ffi.Pointer<ffi.Char>>,
                    ffi.Pointer<ffi.Pointer<ffi.Char>>)>>,
        ffi.Pointer<ffi.Void>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_exec')
external int sqlite3_exec(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> sql,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int,
                  ffi.Pointer<ffi.Pointer<ffi.Char>>,
                  ffi.Pointer<ffi.Pointer<ffi.Char>>)>>
      callback,
  ffi.Pointer<ffi.Void> arg3,
  ffi.Pointer<ffi.Pointer<ffi.Char>> errmsg,
);

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_initialize')
external int sqlite3_initialize();

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_shutdown')
external int sqlite3_shutdown();

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_os_init')
external int sqlite3_os_init();

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_os_end')
external int sqlite3_os_end();

@ffi.Native<ffi.Int Function(ffi.Int)>(symbol: 'sqlite3_config')
external int sqlite3_config(
  int arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_db_config')
external int sqlite3_db_config(
  ffi.Pointer<sqlite3> arg0,
  int op,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_extended_result_codes')
external int sqlite3_extended_result_codes(
  ffi.Pointer<sqlite3> arg0,
  int onoff,
);

@ffi.Native<sqlite3_int64 Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_last_insert_rowid')
external int sqlite3_last_insert_rowid(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3>, sqlite3_int64)>(
    symbol: 'sqlite3_set_last_insert_rowid')
external void sqlite3_set_last_insert_rowid(
  ffi.Pointer<sqlite3> arg0,
  int arg1,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(symbol: 'sqlite3_changes')
external int sqlite3_changes(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<sqlite3_int64 Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_changes64')
external int sqlite3_changes64(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_total_changes')
external int sqlite3_total_changes(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<sqlite3_int64 Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_total_changes64')
external int sqlite3_total_changes64(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_interrupt')
external void sqlite3_interrupt(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_is_interrupted')
external int sqlite3_is_interrupted(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_complete')
external int sqlite3_complete(
  ffi.Pointer<ffi.Char> sql,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Void>)>(
    symbol: 'sqlite3_complete16')
external int sqlite3_complete16(
  ffi.Pointer<ffi.Void> sql,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi
            .NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_busy_handler')
external int sqlite3_busy_handler(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int)>>
      arg1,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_busy_timeout')
external int sqlite3_busy_timeout(
  ffi.Pointer<sqlite3> arg0,
  int ms,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>>,
        ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_get_table')
external int sqlite3_get_table(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSql,
  ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>> pazResult,
  ffi.Pointer<ffi.Int> pnRow,
  ffi.Pointer<ffi.Int> pnColumn,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzErrmsg,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Pointer<ffi.Char>>)>(
    symbol: 'sqlite3_free_table')
external void sqlite3_free_table(
  ffi.Pointer<ffi.Pointer<ffi.Char>> result,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_mprintf')
external ffi.Pointer<ffi.Char> sqlite3_mprintf(
  ffi.Pointer<ffi.Char> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>, va_list)>(
    symbol: 'sqlite3_vmprintf')
external ffi.Pointer<ffi.Char> sqlite3_vmprintf(
  ffi.Pointer<ffi.Char> arg0,
  va_list arg1,
);

@ffi.Native<
    ffi.Pointer<ffi.Char> Function(ffi.Int, ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_snprintf')
external ffi.Pointer<ffi.Char> sqlite3_snprintf(
  int arg0,
  ffi.Pointer<ffi.Char> arg1,
  ffi.Pointer<ffi.Char> arg2,
);

@ffi.Native<
    ffi.Pointer<ffi.Char> Function(ffi.Int, ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>, va_list)>(symbol: 'sqlite3_vsnprintf')
external ffi.Pointer<ffi.Char> sqlite3_vsnprintf(
  int arg0,
  ffi.Pointer<ffi.Char> arg1,
  ffi.Pointer<ffi.Char> arg2,
  va_list arg3,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Int)>(symbol: 'sqlite3_malloc')
external ffi.Pointer<ffi.Void> sqlite3_malloc(
  int arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(sqlite3_uint64)>(
    symbol: 'sqlite3_malloc64')
external ffi.Pointer<ffi.Void> sqlite3_malloc64(
  int arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int)>(
    symbol: 'sqlite3_realloc')
external ffi.Pointer<ffi.Void> sqlite3_realloc(
  ffi.Pointer<ffi.Void> arg0,
  int arg1,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<ffi.Void>, sqlite3_uint64)>(symbol: 'sqlite3_realloc64')
external ffi.Pointer<ffi.Void> sqlite3_realloc64(
  ffi.Pointer<ffi.Void> arg0,
  int arg1,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_free')
external void sqlite3_free(
  ffi.Pointer<ffi.Void> arg0,
);

@ffi.Native<sqlite3_uint64 Function(ffi.Pointer<ffi.Void>)>(
    symbol: 'sqlite3_msize')
external int sqlite3_msize(
  ffi.Pointer<ffi.Void> arg0,
);

@ffi.Native<sqlite3_int64 Function()>(symbol: 'sqlite3_memory_used')
external int sqlite3_memory_used();

@ffi.Native<sqlite3_int64 Function(ffi.Int)>(symbol: 'sqlite3_memory_highwater')
external int sqlite3_memory_highwater(
  int resetFlag,
);

@ffi.Native<ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Void>)>(
    symbol: 'sqlite3_randomness')
external void sqlite3_randomness(
  int N,
  ffi.Pointer<ffi.Void> P,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Int Function(
                    ffi.Pointer<ffi.Void>,
                    ffi.Int,
                    ffi.Pointer<ffi.Char>,
                    ffi.Pointer<ffi.Char>,
                    ffi.Pointer<ffi.Char>,
                    ffi.Pointer<ffi.Char>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_set_authorizer')
external int sqlite3_set_authorizer(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Int,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<ffi.Char>)>>
      xAuth,
  ffi.Pointer<ffi.Void> pUserData,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Char>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_trace')
external ffi.Pointer<ffi.Void> sqlite3_trace(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Char>)>>
      xTrace,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Char>,
                    sqlite3_uint64)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_profile')
external ffi.Pointer<ffi.Void> sqlite3_profile(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Char>,
                  sqlite3_uint64)>>
      xProfile,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.UnsignedInt,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Int Function(ffi.UnsignedInt, ffi.Pointer<ffi.Void>,
                    ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_trace_v2')
external int sqlite3_trace_v2(
  ffi.Pointer<sqlite3> arg0,
  int uMask,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.UnsignedInt, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>
      xCallback,
  ffi.Pointer<ffi.Void> pCtx,
);

@ffi.Native<
    ffi.Void Function(
        ffi.Pointer<sqlite3>,
        ffi.Int,
        ffi.Pointer<
            ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_progress_handler')
external void sqlite3_progress_handler(
  ffi.Pointer<sqlite3> arg0,
  int arg1,
  ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>> arg2,
  ffi.Pointer<ffi.Void> arg3,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Pointer<sqlite3>>)>(symbol: 'sqlite3_open')
external int sqlite3_open(
  ffi.Pointer<ffi.Char> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<ffi.Void>,
        ffi.Pointer<ffi.Pointer<sqlite3>>)>(symbol: 'sqlite3_open16')
external int sqlite3_open16(
  ffi.Pointer<ffi.Void> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<sqlite3>>,
        ffi.Int, ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_open_v2')
external int sqlite3_open_v2(
  ffi.Pointer<ffi.Char> filename,
  ffi.Pointer<ffi.Pointer<sqlite3>> ppDb,
  int flags,
  ffi.Pointer<ffi.Char> zVfs,
);

@ffi.Native<
    ffi.Pointer<ffi.Char> Function(sqlite3_filename,
        ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_uri_parameter')
external ffi.Pointer<ffi.Char> sqlite3_uri_parameter(
  sqlite3_filename z,
  ffi.Pointer<ffi.Char> zParam,
);

@ffi.Native<ffi.Int Function(sqlite3_filename, ffi.Pointer<ffi.Char>, ffi.Int)>(
    symbol: 'sqlite3_uri_boolean')
external int sqlite3_uri_boolean(
  sqlite3_filename z,
  ffi.Pointer<ffi.Char> zParam,
  int bDefault,
);

@ffi.Native<
    sqlite3_int64 Function(sqlite3_filename, ffi.Pointer<ffi.Char>,
        sqlite3_int64)>(symbol: 'sqlite3_uri_int64')
external int sqlite3_uri_int64(
  sqlite3_filename arg0,
  ffi.Pointer<ffi.Char> arg1,
  int arg2,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(sqlite3_filename, ffi.Int)>(
    symbol: 'sqlite3_uri_key')
external ffi.Pointer<ffi.Char> sqlite3_uri_key(
  sqlite3_filename z,
  int N,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(sqlite3_filename)>(
    symbol: 'sqlite3_filename_database')
external ffi.Pointer<ffi.Char> sqlite3_filename_database(
  sqlite3_filename arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(sqlite3_filename)>(
    symbol: 'sqlite3_filename_journal')
external ffi.Pointer<ffi.Char> sqlite3_filename_journal(
  sqlite3_filename arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(sqlite3_filename)>(
    symbol: 'sqlite3_filename_wal')
external ffi.Pointer<ffi.Char> sqlite3_filename_wal(
  sqlite3_filename arg0,
);

@ffi.Native<ffi.Pointer<sqlite3_file> Function(ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_database_file_object')
external ffi.Pointer<sqlite3_file> sqlite3_database_file_object(
  ffi.Pointer<ffi.Char> arg0,
);

@ffi.Native<
    sqlite3_filename Function(
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_create_filename')
external sqlite3_filename sqlite3_create_filename(
  ffi.Pointer<ffi.Char> zDatabase,
  ffi.Pointer<ffi.Char> zJournal,
  ffi.Pointer<ffi.Char> zWal,
  int nParam,
  ffi.Pointer<ffi.Pointer<ffi.Char>> azParam,
);

@ffi.Native<ffi.Void Function(sqlite3_filename)>(
    symbol: 'sqlite3_free_filename')
external void sqlite3_free_filename(
  sqlite3_filename arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(symbol: 'sqlite3_errcode')
external int sqlite3_errcode(
  ffi.Pointer<sqlite3> db,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_extended_errcode')
external int sqlite3_extended_errcode(
  ffi.Pointer<sqlite3> db,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_errmsg')
external ffi.Pointer<ffi.Char> sqlite3_errmsg(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_errmsg16')
external ffi.Pointer<ffi.Void> sqlite3_errmsg16(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Int)>(symbol: 'sqlite3_errstr')
external ffi.Pointer<ffi.Char> sqlite3_errstr(
  int arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_error_offset')
external int sqlite3_error_offset(
  ffi.Pointer<sqlite3> db,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int, ffi.Int)>(
    symbol: 'sqlite3_limit')
external int sqlite3_limit(
  ffi.Pointer<sqlite3> arg0,
  int id,
  int newVal,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_prepare')
external int sqlite3_prepare(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzTail,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_prepare_v2')
external int sqlite3_prepare_v2(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzTail,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.UnsignedInt,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_prepare_v3')
external int sqlite3_prepare_v3(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSql,
  int nByte,
  int prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzTail,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Void>,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Void>>)>(symbol: 'sqlite3_prepare16')
external int sqlite3_prepare16(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Void>,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Void>>)>(symbol: 'sqlite3_prepare16_v2')
external int sqlite3_prepare16_v2(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Void>,
        ffi.Int,
        ffi.UnsignedInt,
        ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
        ffi.Pointer<ffi.Pointer<ffi.Void>>)>(symbol: 'sqlite3_prepare16_v3')
external int sqlite3_prepare16_v3(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zSql,
  int nByte,
  int prepFlags,
  ffi.Pointer<ffi.Pointer<sqlite3_stmt>> ppStmt,
  ffi.Pointer<ffi.Pointer<ffi.Void>> pzTail,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_sql')
external ffi.Pointer<ffi.Char> sqlite3_sql(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_expanded_sql')
external ffi.Pointer<ffi.Char> sqlite3_expanded_sql(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_stmt_readonly')
external int sqlite3_stmt_readonly(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_stmt_isexplain')
external int sqlite3_stmt_isexplain(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_stmt_busy')
external int sqlite3_stmt_busy(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3_stmt>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_bind_blob')
external int sqlite3_bind_blob(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int n,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3_stmt>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            sqlite3_uint64,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_bind_blob64')
external int sqlite3_bind_blob64(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Double)>(
    symbol: 'sqlite3_bind_double')
external int sqlite3_bind_double(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  double arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>(
    symbol: 'sqlite3_bind_int')
external int sqlite3_bind_int(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, sqlite3_int64)>(
    symbol: 'sqlite3_bind_int64')
external int sqlite3_bind_int64(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_bind_null')
external int sqlite3_bind_null(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3_stmt>,
            ffi.Int,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_bind_text')
external int sqlite3_bind_text(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Char> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3_stmt>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_bind_text16')
external int sqlite3_bind_text16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3_stmt>,
        ffi.Int,
        ffi.Pointer<ffi.Char>,
        sqlite3_uint64,
        ffi.Pointer<
            ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
        ffi.UnsignedChar)>(symbol: 'sqlite3_bind_text64')
external int sqlite3_bind_text64(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Char> arg2,
  int arg3,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
  int encoding,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int,
        ffi.Pointer<sqlite3_value>)>(symbol: 'sqlite3_bind_value')
external int sqlite3_bind_value(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<sqlite3_value> arg2,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3_stmt>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<ffi.Char>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_bind_pointer')
external int sqlite3_bind_pointer(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.Char> arg3,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg4,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>(
    symbol: 'sqlite3_bind_zeroblob')
external int sqlite3_bind_zeroblob(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int n,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, sqlite3_uint64)>(
    symbol: 'sqlite3_bind_zeroblob64')
external int sqlite3_bind_zeroblob64(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
  int arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_bind_parameter_count')
external int sqlite3_bind_parameter_count(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_bind_parameter_name')
external ffi.Pointer<ffi.Char> sqlite3_bind_parameter_name(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_bind_parameter_index')
external int sqlite3_bind_parameter_index(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<ffi.Char> zName,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_clear_bindings')
external int sqlite3_clear_bindings(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_column_count')
external int sqlite3_column_count(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_name')
external ffi.Pointer<ffi.Char> sqlite3_column_name(
  ffi.Pointer<sqlite3_stmt> arg0,
  int N,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_name16')
external ffi.Pointer<ffi.Void> sqlite3_column_name16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int N,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_database_name')
external ffi.Pointer<ffi.Char> sqlite3_column_database_name(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_database_name16')
external ffi.Pointer<ffi.Void> sqlite3_column_database_name16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_table_name')
external ffi.Pointer<ffi.Char> sqlite3_column_table_name(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_table_name16')
external ffi.Pointer<ffi.Void> sqlite3_column_table_name16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_origin_name')
external ffi.Pointer<ffi.Char> sqlite3_column_origin_name(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_origin_name16')
external ffi.Pointer<ffi.Void> sqlite3_column_origin_name16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_decltype')
external ffi.Pointer<ffi.Char> sqlite3_column_decltype(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_decltype16')
external ffi.Pointer<ffi.Void> sqlite3_column_decltype16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int arg1,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(symbol: 'sqlite3_step')
external int sqlite3_step(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_data_count')
external int sqlite3_data_count(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_blob')
external ffi.Pointer<ffi.Void> sqlite3_column_blob(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Double Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_double')
external double sqlite3_column_double(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_int')
external int sqlite3_column_int(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<sqlite3_int64 Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_int64')
external int sqlite3_column_int64(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<
    ffi.Pointer<ffi.UnsignedChar> Function(
        ffi.Pointer<sqlite3_stmt>, ffi.Int)>(symbol: 'sqlite3_column_text')
external ffi.Pointer<ffi.UnsignedChar> sqlite3_column_text(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_text16')
external ffi.Pointer<ffi.Void> sqlite3_column_text16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<
    ffi.Pointer<sqlite3_value> Function(
        ffi.Pointer<sqlite3_stmt>, ffi.Int)>(symbol: 'sqlite3_column_value')
external ffi.Pointer<sqlite3_value> sqlite3_column_value(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_bytes')
external int sqlite3_column_bytes(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_bytes16')
external int sqlite3_column_bytes16(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>(
    symbol: 'sqlite3_column_type')
external int sqlite3_column_type(
  ffi.Pointer<sqlite3_stmt> arg0,
  int iCol,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_finalize')
external int sqlite3_finalize(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_reset')
external int sqlite3_reset(
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>)>>)>(
    symbol: 'sqlite3_create_function')
external int sqlite3_create_function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xFunc,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xStep,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      xFinal,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>)>>)>(
    symbol: 'sqlite3_create_function16')
external int sqlite3_create_function16(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Void> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xFunc,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xStep,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      xFinal,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_function_v2')
external int sqlite3_create_function_v2(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xFunc,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xStep,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      xFinal,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDestroy,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                        ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_window_function')
external int sqlite3_create_window_function(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zFunctionName,
  int nArg,
  int eTextRep,
  ffi.Pointer<ffi.Void> pApp,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xStep,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      xFinal,
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      xValue,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>
      xInverse,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDestroy,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_aggregate_count')
external int sqlite3_aggregate_count(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_expired')
external int sqlite3_expired(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_transfer_bindings')
external int sqlite3_transfer_bindings(
  ffi.Pointer<sqlite3_stmt> arg0,
  ffi.Pointer<sqlite3_stmt> arg1,
);

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_global_recover')
external int sqlite3_global_recover();

@ffi.Native<ffi.Void Function()>(symbol: 'sqlite3_thread_cleanup')
external void sqlite3_thread_cleanup();

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Void>, sqlite3_int64, ffi.Int)>>,
        ffi.Pointer<ffi.Void>,
        sqlite3_int64)>(symbol: 'sqlite3_memory_alarm')
external int sqlite3_memory_alarm(
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, sqlite3_int64, ffi.Int)>>
      arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_blob')
external ffi.Pointer<ffi.Void> sqlite3_value_blob(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Double Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_double')
external double sqlite3_value_double(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_int')
external int sqlite3_value_int(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<sqlite3_int64 Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_int64')
external int sqlite3_value_int64(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>,
        ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_value_pointer')
external ffi.Pointer<ffi.Void> sqlite3_value_pointer(
  ffi.Pointer<sqlite3_value> arg0,
  ffi.Pointer<ffi.Char> arg1,
);

@ffi.Native<ffi.Pointer<ffi.UnsignedChar> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_text')
external ffi.Pointer<ffi.UnsignedChar> sqlite3_value_text(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_text16')
external ffi.Pointer<ffi.Void> sqlite3_value_text16(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_text16le')
external ffi.Pointer<ffi.Void> sqlite3_value_text16le(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_text16be')
external ffi.Pointer<ffi.Void> sqlite3_value_text16be(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_bytes')
external int sqlite3_value_bytes(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_bytes16')
external int sqlite3_value_bytes16(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_type')
external int sqlite3_value_type(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_numeric_type')
external int sqlite3_value_numeric_type(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_nochange')
external int sqlite3_value_nochange(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_frombind')
external int sqlite3_value_frombind(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_encoding')
external int sqlite3_value_encoding(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.UnsignedInt Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_subtype')
external int sqlite3_value_subtype(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Pointer<sqlite3_value> Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_dup')
external ffi.Pointer<sqlite3_value> sqlite3_value_dup(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_value>)>(
    symbol: 'sqlite3_value_free')
external void sqlite3_value_free(
  ffi.Pointer<sqlite3_value> arg0,
);

@ffi.Native<
        ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_context>, ffi.Int)>(
    symbol: 'sqlite3_aggregate_context')
external ffi.Pointer<ffi.Void> sqlite3_aggregate_context(
  ffi.Pointer<sqlite3_context> arg0,
  int nBytes,
);

@ffi.Native<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_user_data')
external ffi.Pointer<ffi.Void> sqlite3_user_data(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<ffi.Pointer<sqlite3> Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_context_db_handle')
external ffi.Pointer<sqlite3> sqlite3_context_db_handle(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3_context>, ffi.Int)>(symbol: 'sqlite3_get_auxdata')
external ffi.Pointer<ffi.Void> sqlite3_get_auxdata(
  ffi.Pointer<sqlite3_context> arg0,
  int N,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_set_auxdata')
external void sqlite3_set_auxdata(
  ffi.Pointer<sqlite3_context> arg0,
  int N,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_blob')
external void sqlite3_result_blob(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            sqlite3_uint64,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_blob64')
external void sqlite3_result_blob64(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Double)>(
    symbol: 'sqlite3_result_double')
external void sqlite3_result_double(
  ffi.Pointer<sqlite3_context> arg0,
  double arg1,
);

@ffi.Native<
    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Pointer<ffi.Char>,
        ffi.Int)>(symbol: 'sqlite3_result_error')
external void sqlite3_result_error(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Char> arg1,
  int arg2,
);

@ffi.Native<
    ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Pointer<ffi.Void>,
        ffi.Int)>(symbol: 'sqlite3_result_error16')
external void sqlite3_result_error16(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_result_error_toobig')
external void sqlite3_result_error_toobig(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_result_error_nomem')
external void sqlite3_result_error_nomem(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>(
    symbol: 'sqlite3_result_error_code')
external void sqlite3_result_error_code(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>(
    symbol: 'sqlite3_result_int')
external void sqlite3_result_int(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, sqlite3_int64)>(
    symbol: 'sqlite3_result_int64')
external void sqlite3_result_int64(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_result_null')
external void sqlite3_result_null(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_text')
external void sqlite3_result_text(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Char> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
    ffi.Void Function(
        ffi.Pointer<sqlite3_context>,
        ffi.Pointer<ffi.Char>,
        sqlite3_uint64,
        ffi.Pointer<
            ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
        ffi.UnsignedChar)>(symbol: 'sqlite3_result_text64')
external void sqlite3_result_text64(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Char> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
  int encoding,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_text16')
external void sqlite3_result_text16(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_text16le')
external void sqlite3_result_text16le(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_text16be')
external void sqlite3_result_text16be(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  int arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
    ffi.Void Function(ffi.Pointer<sqlite3_context>,
        ffi.Pointer<sqlite3_value>)>(symbol: 'sqlite3_result_value')
external void sqlite3_result_value(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<sqlite3_value> arg1,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<sqlite3_context>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<ffi.Char>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_result_pointer')
external void sqlite3_result_pointer(
  ffi.Pointer<sqlite3_context> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<ffi.Char> arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>(
    symbol: 'sqlite3_result_zeroblob')
external void sqlite3_result_zeroblob(
  ffi.Pointer<sqlite3_context> arg0,
  int n,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_context>, sqlite3_uint64)>(
    symbol: 'sqlite3_result_zeroblob64')
external int sqlite3_result_zeroblob64(
  ffi.Pointer<sqlite3_context> arg0,
  int n,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.UnsignedInt)>(
    symbol: 'sqlite3_result_subtype')
external void sqlite3_result_subtype(
  ffi.Pointer<sqlite3_context> arg0,
  int arg1,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Int Function(
                        ffi.Pointer<ffi.Void>,
                        ffi.Int,
                        ffi.Pointer<ffi.Void>,
                        ffi.Int,
                        ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_collation')
external int sqlite3_create_collation(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int,
                  ffi.Pointer<ffi.Void>, ffi.Int, ffi.Pointer<ffi.Void>)>>
      xCompare,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi
                .Pointer<
                    ffi
                    .NativeFunction<
                        ffi.Int Function(
                            ffi.Pointer<ffi.Void>,
                            ffi.Int,
                            ffi.Pointer<ffi.Void>,
                            ffi.Int,
                            ffi.Pointer<ffi.Void>)>>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_collation_v2')
external int sqlite3_create_collation_v2(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int,
                  ffi.Pointer<ffi.Void>, ffi.Int, ffi.Pointer<ffi.Void>)>>
      xCompare,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDestroy,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Int Function(
                        ffi.Pointer<ffi.Void>,
                        ffi.Int,
                        ffi.Pointer<ffi.Void>,
                        ffi.Int,
                        ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_collation16')
external int sqlite3_create_collation16(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> zName,
  int eTextRep,
  ffi.Pointer<ffi.Void> pArg,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int,
                  ffi.Pointer<ffi.Void>, ffi.Int, ffi.Pointer<ffi.Void>)>>
      xCompare,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<sqlite3>,
                        ffi.Int,
                        ffi.Pointer<ffi.Char>)>>)>(
    symbol: 'sqlite3_collation_needed')
external int sqlite3_collation_needed(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<sqlite3>,
                  ffi.Int, ffi.Pointer<ffi.Char>)>>
      arg2,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Void Function(
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<sqlite3>,
                        ffi.Int,
                        ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_collation_needed16')
external int sqlite3_collation_needed16(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Void> arg1,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<sqlite3>,
                  ffi.Int, ffi.Pointer<ffi.Void>)>>
      arg2,
);

@ffi.Native<ffi.Int Function(ffi.Int)>(symbol: 'sqlite3_sleep')
external int sqlite3_sleep(
  int arg0,
);

@ffi.Native<ffi.Int Function(ffi.UnsignedLong, ffi.Pointer<ffi.Void>)>(
    symbol: 'sqlite3_win32_set_directory')
external int sqlite3_win32_set_directory(
  int type,
  ffi.Pointer<ffi.Void> zValue,
);

@ffi.Native<ffi.Int Function(ffi.UnsignedLong, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_win32_set_directory8')
external int sqlite3_win32_set_directory8(
  int type,
  ffi.Pointer<ffi.Char> zValue,
);

@ffi.Native<ffi.Int Function(ffi.UnsignedLong, ffi.Pointer<ffi.Void>)>(
    symbol: 'sqlite3_win32_set_directory16')
external int sqlite3_win32_set_directory16(
  int type,
  ffi.Pointer<ffi.Void> zValue,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_get_autocommit')
external int sqlite3_get_autocommit(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Pointer<sqlite3> Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_db_handle')
external ffi.Pointer<sqlite3> sqlite3_db_handle(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_db_name')
external ffi.Pointer<ffi.Char> sqlite3_db_name(
  ffi.Pointer<sqlite3> db,
  int N,
);

@ffi.Native<
        sqlite3_filename Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_db_filename')
external sqlite3_filename sqlite3_db_filename(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDbName,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_db_readonly')
external int sqlite3_db_readonly(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDbName,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_txn_state')
external int sqlite3_txn_state(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zSchema,
);

@ffi.Native<
    ffi.Pointer<sqlite3_stmt> Function(ffi.Pointer<sqlite3>,
        ffi.Pointer<sqlite3_stmt>)>(symbol: 'sqlite3_next_stmt')
external ffi.Pointer<sqlite3_stmt> sqlite3_next_stmt(
  ffi.Pointer<sqlite3> pDb,
  ffi.Pointer<sqlite3_stmt> pStmt,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_commit_hook')
external ffi.Pointer<ffi.Void> sqlite3_commit_hook(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>> arg1,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_rollback_hook')
external ffi.Pointer<ffi.Void> sqlite3_rollback_hook(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg1,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.UnsignedInt Function(
                        ffi.Pointer<ffi.Void>,
                        ffi.Pointer<ffi.Char>,
                        ffi.UnsignedInt,
                        ffi.UnsignedInt,
                        ffi.UnsignedInt)>>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_autovacuum_pages')
external int sqlite3_autovacuum_pages(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.UnsignedInt Function(
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Char>,
                  ffi.UnsignedInt,
                  ffi.UnsignedInt,
                  ffi.UnsignedInt)>>
      arg1,
  ffi.Pointer<ffi.Void> arg2,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      arg3,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Void>,
                    ffi.Int,
                    ffi.Pointer<ffi.Char>,
                    ffi.Pointer<ffi.Char>,
                    sqlite3_int64)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_update_hook')
external ffi.Pointer<ffi.Void> sqlite3_update_hook(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Int,
                  ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, sqlite3_int64)>>
      arg1,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<ffi.Int Function(ffi.Int)>(symbol: 'sqlite3_enable_shared_cache')
external int sqlite3_enable_shared_cache(
  int arg0,
);

@ffi.Native<ffi.Int Function(ffi.Int)>(symbol: 'sqlite3_release_memory')
external int sqlite3_release_memory(
  int arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_db_release_memory')
external int sqlite3_db_release_memory(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<sqlite3_int64 Function(sqlite3_int64)>(
    symbol: 'sqlite3_soft_heap_limit64')
external int sqlite3_soft_heap_limit64(
  int N,
);

@ffi.Native<sqlite3_int64 Function(sqlite3_int64)>(
    symbol: 'sqlite3_hard_heap_limit64')
external int sqlite3_hard_heap_limit64(
  int N,
);

@ffi.Native<ffi.Void Function(ffi.Int)>(symbol: 'sqlite3_soft_heap_limit')
external void sqlite3_soft_heap_limit(
  int N,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>,
        ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Int>)>(symbol: 'sqlite3_table_column_metadata')
external int sqlite3_table_column_metadata(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDbName,
  ffi.Pointer<ffi.Char> zTableName,
  ffi.Pointer<ffi.Char> zColumnName,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzDataType,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzCollSeq,
  ffi.Pointer<ffi.Int> pNotNull,
  ffi.Pointer<ffi.Int> pPrimaryKey,
  ffi.Pointer<ffi.Int> pAutoinc,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_load_extension')
external int sqlite3_load_extension(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zFile,
  ffi.Pointer<ffi.Char> zProc,
  ffi.Pointer<ffi.Pointer<ffi.Char>> pzErrMsg,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_enable_load_extension')
external int sqlite3_enable_load_extension(
  ffi.Pointer<sqlite3> db,
  int onoff,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>)>(
    symbol: 'sqlite3_auto_extension')
external int sqlite3_auto_extension(
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>> xEntryPoint,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>)>(
    symbol: 'sqlite3_cancel_auto_extension')
external int sqlite3_cancel_auto_extension(
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>> xEntryPoint,
);

@ffi.Native<ffi.Void Function()>(symbol: 'sqlite3_reset_auto_extension')
external void sqlite3_reset_auto_extension();

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<sqlite3_module>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_create_module')
external int sqlite3_create_module(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Pointer<sqlite3_module>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_create_module_v2')
external int sqlite3_create_module_v2(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zName,
  ffi.Pointer<sqlite3_module> p,
  ffi.Pointer<ffi.Void> pClientData,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDestroy,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Pointer<ffi.Char>>)>(symbol: 'sqlite3_drop_modules')
external int sqlite3_drop_modules(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Pointer<ffi.Char>> azKeep,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_declare_vtab')
external int sqlite3_declare_vtab(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zSQL,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>, ffi.Int)>(
    symbol: 'sqlite3_overload_function')
external int sqlite3_overload_function(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zFuncName,
  int nArg,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        sqlite3_int64,
        ffi.Int,
        ffi.Pointer<ffi.Pointer<sqlite3_blob>>)>(symbol: 'sqlite3_blob_open')
external int sqlite3_blob_open(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zDb,
  ffi.Pointer<ffi.Char> zTable,
  ffi.Pointer<ffi.Char> zColumn,
  int iRow,
  int flags,
  ffi.Pointer<ffi.Pointer<sqlite3_blob>> ppBlob,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_blob>, sqlite3_int64)>(
    symbol: 'sqlite3_blob_reopen')
external int sqlite3_blob_reopen(
  ffi.Pointer<sqlite3_blob> arg0,
  int arg1,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_blob>)>(
    symbol: 'sqlite3_blob_close')
external int sqlite3_blob_close(
  ffi.Pointer<sqlite3_blob> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_blob>)>(
    symbol: 'sqlite3_blob_bytes')
external int sqlite3_blob_bytes(
  ffi.Pointer<sqlite3_blob> arg0,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_blob>, ffi.Pointer<ffi.Void>, ffi.Int,
        ffi.Int)>(symbol: 'sqlite3_blob_read')
external int sqlite3_blob_read(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> Z,
  int N,
  int iOffset,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_blob>, ffi.Pointer<ffi.Void>, ffi.Int,
        ffi.Int)>(symbol: 'sqlite3_blob_write')
external int sqlite3_blob_write(
  ffi.Pointer<sqlite3_blob> arg0,
  ffi.Pointer<ffi.Void> z,
  int n,
  int iOffset,
);

@ffi.Native<ffi.Pointer<sqlite3_vfs> Function(ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_vfs_find')
external ffi.Pointer<sqlite3_vfs> sqlite3_vfs_find(
  ffi.Pointer<ffi.Char> zVfsName,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Int)>(
    symbol: 'sqlite3_vfs_register')
external int sqlite3_vfs_register(
  ffi.Pointer<sqlite3_vfs> arg0,
  int makeDflt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_vfs>)>(
    symbol: 'sqlite3_vfs_unregister')
external int sqlite3_vfs_unregister(
  ffi.Pointer<sqlite3_vfs> arg0,
);

@ffi.Native<ffi.Pointer<sqlite3_mutex> Function(ffi.Int)>(
    symbol: 'sqlite3_mutex_alloc')
external ffi.Pointer<sqlite3_mutex> sqlite3_mutex_alloc(
  int arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_free')
external void sqlite3_mutex_free(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_enter')
external void sqlite3_mutex_enter(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_try')
external int sqlite3_mutex_try(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_leave')
external void sqlite3_mutex_leave(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_held')
external int sqlite3_mutex_held(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>(
    symbol: 'sqlite3_mutex_notheld')
external int sqlite3_mutex_notheld(
  ffi.Pointer<sqlite3_mutex> arg0,
);

@ffi.Native<ffi.Pointer<sqlite3_mutex> Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_db_mutex')
external ffi.Pointer<sqlite3_mutex> sqlite3_db_mutex(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>, ffi.Int,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_file_control')
external int sqlite3_file_control(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<ffi.Char> zDbName,
  int op,
  ffi.Pointer<ffi.Void> arg3,
);

@ffi.Native<ffi.Int Function(ffi.Int)>(symbol: 'sqlite3_test_control')
external int sqlite3_test_control(
  int op,
);

@ffi.Native<ffi.Int Function()>(symbol: 'sqlite3_keyword_count')
external int sqlite3_keyword_count();

@ffi.Native<
    ffi.Int Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>,
        ffi.Pointer<ffi.Int>)>(symbol: 'sqlite3_keyword_name')
external int sqlite3_keyword_name(
  int arg0,
  ffi.Pointer<ffi.Pointer<ffi.Char>> arg1,
  ffi.Pointer<ffi.Int> arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Int)>(
    symbol: 'sqlite3_keyword_check')
external int sqlite3_keyword_check(
  ffi.Pointer<ffi.Char> arg0,
  int arg1,
);

@ffi.Native<ffi.Pointer<sqlite3_str> Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_str_new')
external ffi.Pointer<sqlite3_str> sqlite3_str_new(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_str>)>(
    symbol: 'sqlite3_str_finish')
external ffi.Pointer<ffi.Char> sqlite3_str_finish(
  ffi.Pointer<sqlite3_str> arg0,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_str_appendf')
external void sqlite3_str_appendf(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Char> zFormat,
);

@ffi.Native<
    ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>,
        va_list)>(symbol: 'sqlite3_str_vappendf')
external void sqlite3_str_vappendf(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Char> zFormat,
  va_list arg2,
);

@ffi.Native<
    ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>,
        ffi.Int)>(symbol: 'sqlite3_str_append')
external void sqlite3_str_append(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Char> zIn,
  int N,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_str_appendall')
external void sqlite3_str_appendall(
  ffi.Pointer<sqlite3_str> arg0,
  ffi.Pointer<ffi.Char> zIn,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Int, ffi.Char)>(
    symbol: 'sqlite3_str_appendchar')
external void sqlite3_str_appendchar(
  ffi.Pointer<sqlite3_str> arg0,
  int N,
  int C,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_str>)>(
    symbol: 'sqlite3_str_reset')
external void sqlite3_str_reset(
  ffi.Pointer<sqlite3_str> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_str>)>(
    symbol: 'sqlite3_str_errcode')
external int sqlite3_str_errcode(
  ffi.Pointer<sqlite3_str> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_str>)>(
    symbol: 'sqlite3_str_length')
external int sqlite3_str_length(
  ffi.Pointer<sqlite3_str> arg0,
);

@ffi.Native<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_str>)>(
    symbol: 'sqlite3_str_value')
external ffi.Pointer<ffi.Char> sqlite3_str_value(
  ffi.Pointer<sqlite3_str> arg0,
);

@ffi.Native<
    ffi.Int Function(ffi.Int, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Int>,
        ffi.Int)>(symbol: 'sqlite3_status')
external int sqlite3_status(
  int op,
  ffi.Pointer<ffi.Int> pCurrent,
  ffi.Pointer<ffi.Int> pHighwater,
  int resetFlag,
);

@ffi.Native<
    ffi.Int Function(ffi.Int, ffi.Pointer<sqlite3_int64>,
        ffi.Pointer<sqlite3_int64>, ffi.Int)>(symbol: 'sqlite3_status64')
external int sqlite3_status64(
  int op,
  ffi.Pointer<sqlite3_int64> pCurrent,
  ffi.Pointer<sqlite3_int64> pHighwater,
  int resetFlag,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int, ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Int>, ffi.Int)>(symbol: 'sqlite3_db_status')
external int sqlite3_db_status(
  ffi.Pointer<sqlite3> arg0,
  int op,
  ffi.Pointer<ffi.Int> pCur,
  ffi.Pointer<ffi.Int> pHiwtr,
  int resetFlg,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>(
    symbol: 'sqlite3_stmt_status')
external int sqlite3_stmt_status(
  ffi.Pointer<sqlite3_stmt> arg0,
  int op,
  int resetFlg,
);

@ffi.Native<
    ffi.Pointer<sqlite3_backup> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>)>(symbol: 'sqlite3_backup_init')
external ffi.Pointer<sqlite3_backup> sqlite3_backup_init(
  ffi.Pointer<sqlite3> pDest,
  ffi.Pointer<ffi.Char> zDestName,
  ffi.Pointer<sqlite3> pSource,
  ffi.Pointer<ffi.Char> zSourceName,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_backup>, ffi.Int)>(
    symbol: 'sqlite3_backup_step')
external int sqlite3_backup_step(
  ffi.Pointer<sqlite3_backup> p,
  int nPage,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>(
    symbol: 'sqlite3_backup_finish')
external int sqlite3_backup_finish(
  ffi.Pointer<sqlite3_backup> p,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>(
    symbol: 'sqlite3_backup_remaining')
external int sqlite3_backup_remaining(
  ffi.Pointer<sqlite3_backup> p,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>(
    symbol: 'sqlite3_backup_pagecount')
external int sqlite3_backup_pagecount(
  ffi.Pointer<sqlite3_backup> p,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Pointer<ffi.Void>> apArg, ffi.Int nArg)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_unlock_notify')
external int sqlite3_unlock_notify(
  ffi.Pointer<sqlite3> pBlocked,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>> apArg, ffi.Int nArg)>>
      xNotify,
  ffi.Pointer<ffi.Void> pNotifyArg,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_stricmp')
external int sqlite3_stricmp(
  ffi.Pointer<ffi.Char> arg0,
  ffi.Pointer<ffi.Char> arg1,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
        ffi.Int)>(symbol: 'sqlite3_strnicmp')
external int sqlite3_strnicmp(
  ffi.Pointer<ffi.Char> arg0,
  ffi.Pointer<ffi.Char> arg1,
  int arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_strglob')
external int sqlite3_strglob(
  ffi.Pointer<ffi.Char> zGlob,
  ffi.Pointer<ffi.Char> zStr,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
        ffi.UnsignedInt)>(symbol: 'sqlite3_strlike')
external int sqlite3_strlike(
  ffi.Pointer<ffi.Char> zGlob,
  ffi.Pointer<ffi.Char> zStr,
  int cEsc,
);

@ffi.Native<ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_log')
external void sqlite3_log(
  int iErrCode,
  ffi.Pointer<ffi.Char> zFormat,
);

@ffi.Native<
    ffi.Pointer<ffi.Void> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<sqlite3>,
                    ffi.Pointer<ffi.Char>, ffi.Int)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_wal_hook')
external ffi.Pointer<ffi.Void> sqlite3_wal_hook(
  ffi.Pointer<sqlite3> arg0,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Pointer<sqlite3>,
                  ffi.Pointer<ffi.Char>, ffi.Int)>>
      arg1,
  ffi.Pointer<ffi.Void> arg2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_wal_autocheckpoint')
external int sqlite3_wal_autocheckpoint(
  ffi.Pointer<sqlite3> db,
  int N,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_wal_checkpoint')
external int sqlite3_wal_checkpoint(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDb,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Int,
        ffi.Pointer<ffi.Int>,
        ffi.Pointer<ffi.Int>)>(symbol: 'sqlite3_wal_checkpoint_v2')
external int sqlite3_wal_checkpoint_v2(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDb,
  int eMode,
  ffi.Pointer<ffi.Int> pnLog,
  ffi.Pointer<ffi.Int> pnCkpt,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>(
    symbol: 'sqlite3_vtab_config')
external int sqlite3_vtab_config(
  ffi.Pointer<sqlite3> arg0,
  int op,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_vtab_on_conflict')
external int sqlite3_vtab_on_conflict(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_context>)>(
    symbol: 'sqlite3_vtab_nochange')
external int sqlite3_vtab_nochange(
  ffi.Pointer<sqlite3_context> arg0,
);

@ffi.Native<
    ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_index_info>,
        ffi.Int)>(symbol: 'sqlite3_vtab_collation')
external ffi.Pointer<ffi.Char> sqlite3_vtab_collation(
  ffi.Pointer<sqlite3_index_info> arg0,
  int arg1,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3_index_info>)>(
    symbol: 'sqlite3_vtab_distinct')
external int sqlite3_vtab_distinct(
  ffi.Pointer<sqlite3_index_info> arg0,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_index_info>, ffi.Int, ffi.Int)>(
    symbol: 'sqlite3_vtab_in')
external int sqlite3_vtab_in(
  ffi.Pointer<sqlite3_index_info> arg0,
  int iCons,
  int bHandle,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_value>,
            ffi.Pointer<ffi.Pointer<sqlite3_value>>)>(
    symbol: 'sqlite3_vtab_in_first')
external int sqlite3_vtab_in_first(
  ffi.Pointer<sqlite3_value> pVal,
  ffi.Pointer<ffi.Pointer<sqlite3_value>> ppOut,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_value>,
            ffi.Pointer<ffi.Pointer<sqlite3_value>>)>(
    symbol: 'sqlite3_vtab_in_next')
external int sqlite3_vtab_in_next(
  ffi.Pointer<sqlite3_value> pVal,
  ffi.Pointer<ffi.Pointer<sqlite3_value>> ppOut,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3_index_info>, ffi.Int,
            ffi.Pointer<ffi.Pointer<sqlite3_value>>)>(
    symbol: 'sqlite3_vtab_rhs_value')
external int sqlite3_vtab_rhs_value(
  ffi.Pointer<sqlite3_index_info> arg0,
  int arg1,
  ffi.Pointer<ffi.Pointer<sqlite3_value>> ppVal,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_stmt_scanstatus')
external int sqlite3_stmt_scanstatus(
  ffi.Pointer<sqlite3_stmt> pStmt,
  int idx,
  int iScanStatusOp,
  ffi.Pointer<ffi.Void> pOut,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int, ffi.Int,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_stmt_scanstatus_v2')
external int sqlite3_stmt_scanstatus_v2(
  ffi.Pointer<sqlite3_stmt> pStmt,
  int idx,
  int iScanStatusOp,
  int flags,
  ffi.Pointer<ffi.Void> pOut,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_stmt>)>(
    symbol: 'sqlite3_stmt_scanstatus_reset')
external void sqlite3_stmt_scanstatus_reset(
  ffi.Pointer<sqlite3_stmt> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_db_cacheflush')
external int sqlite3_db_cacheflush(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>)>(
    symbol: 'sqlite3_system_errno')
external int sqlite3_system_errno(
  ffi.Pointer<sqlite3> arg0,
);

@ffi.Native<
        ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>,
            ffi.Pointer<ffi.Pointer<sqlite3_snapshot>>)>(
    symbol: 'sqlite3_snapshot_get')
external int sqlite3_snapshot_get(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSchema,
  ffi.Pointer<ffi.Pointer<sqlite3_snapshot>> ppSnapshot,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>,
        ffi.Pointer<sqlite3_snapshot>)>(symbol: 'sqlite3_snapshot_open')
external int sqlite3_snapshot_open(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSchema,
  ffi.Pointer<sqlite3_snapshot> pSnapshot,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<sqlite3_snapshot>)>(
    symbol: 'sqlite3_snapshot_free')
external void sqlite3_snapshot_free(
  ffi.Pointer<sqlite3_snapshot> arg0,
);

@ffi.Native<
    ffi.Int Function(ffi.Pointer<sqlite3_snapshot>,
        ffi.Pointer<sqlite3_snapshot>)>(symbol: 'sqlite3_snapshot_cmp')
external int sqlite3_snapshot_cmp(
  ffi.Pointer<sqlite3_snapshot> p1,
  ffi.Pointer<sqlite3_snapshot> p2,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>(
    symbol: 'sqlite3_snapshot_recover')
external int sqlite3_snapshot_recover(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zDb,
);

@ffi.Native<
    ffi.Pointer<ffi.UnsignedChar> Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<sqlite3_int64>,
        ffi.UnsignedInt)>(symbol: 'sqlite3_serialize')
external ffi.Pointer<ffi.UnsignedChar> sqlite3_serialize(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSchema,
  ffi.Pointer<sqlite3_int64> piSize,
  int mFlags,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.UnsignedChar>,
        sqlite3_int64,
        sqlite3_int64,
        ffi.UnsignedInt)>(symbol: 'sqlite3_deserialize')
external int sqlite3_deserialize(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zSchema,
  ffi.Pointer<ffi.UnsignedChar> pData,
  int szDb,
  int szBuf,
  int mFlags,
);

@ffi.Native<
    ffi.Int Function(
        ffi.Pointer<sqlite3>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<
            ffi.NativeFunction<
                ffi.Int Function(ffi.Pointer<sqlite3_rtree_geometry>, ffi.Int,
                    ffi.Pointer<sqlite3_rtree_dbl>, ffi.Pointer<ffi.Int>)>>,
        ffi.Pointer<ffi.Void>)>(symbol: 'sqlite3_rtree_geometry_callback')
external int sqlite3_rtree_geometry_callback(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zGeom,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_rtree_geometry>, ffi.Int,
                  ffi.Pointer<sqlite3_rtree_dbl>, ffi.Pointer<ffi.Int>)>>
      xGeom,
  ffi.Pointer<ffi.Void> pContext,
);

@ffi.Native<
        ffi.Int Function(
            ffi.Pointer<sqlite3>,
            ffi.Pointer<ffi.Char>,
            ffi.Pointer<
                ffi.NativeFunction<
                    ffi.Int Function(ffi.Pointer<sqlite3_rtree_query_info>)>>,
            ffi.Pointer<ffi.Void>,
            ffi.Pointer<
                ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>(
    symbol: 'sqlite3_rtree_query_callback')
external int sqlite3_rtree_query_callback(
  ffi.Pointer<sqlite3> db,
  ffi.Pointer<ffi.Char> zQueryFunc,
  ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_rtree_query_info>)>>
      xQueryFunc,
  ffi.Pointer<ffi.Void> pContext,
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDestructor,
);

final class sqlite3 extends ffi.Opaque {}

final class sqlite3_file extends ffi.Struct {
  external ffi.Pointer<sqlite3_io_methods> pMethods;
}

final class sqlite3_io_methods extends ffi.Opaque {}

final class sqlite3_mutex extends ffi.Opaque {}

final class sqlite3_api_routines extends ffi.Struct {
  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_context>, ffi.Int)>> aggregate_context;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_context>)>>
      aggregate_count;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> bind_blob;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Double)>>
      bind_double;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>>
      bind_int;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int, sqlite_int64)>> bind_int64;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      bind_null;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      bind_parameter_count;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_stmt>, ffi.Pointer<ffi.Char>)>>
      bind_parameter_index;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> bind_parameter_name;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> bind_text;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> bind_text16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int,
              ffi.Pointer<sqlite3_value>)>> bind_value;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(ffi.Pointer<ffi.Void>, ffi.Int)>>,
              ffi.Pointer<ffi.Void>)>> busy_handler;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      busy_timeout;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      changes;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      close;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Pointer<sqlite3>,
                          ffi.Int,
                          ffi.Pointer<ffi.Char>)>>)>> collation_needed;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Pointer<sqlite3>,
                          ffi.Int,
                          ffi.Pointer<ffi.Void>)>>)>> collation_needed16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_blob;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_bytes;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_bytes16;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt> pStmt)>>
      column_count;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_database_name;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_database_name16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_decltype;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_decltype16;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Double Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_double;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_int;

  external ffi.Pointer<
          ffi.NativeFunction<
              sqlite_int64 Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_int64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_name;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_name16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_origin_name;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_origin_name16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_table_name;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_table_name16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.UnsignedChar> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_text;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_text16;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int)>>
      column_type;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_value> Function(
              ffi.Pointer<sqlite3_stmt>, ffi.Int)>> column_value;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>> commit_hook;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char> sql)>>
      complete;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void> sql)>>
      complete16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Void>)>>)>> create_collation;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Void>)>>)>> create_collation16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<sqlite3_context>)>>)>> create_function;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<sqlite3_context>)>>)>> create_function16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<sqlite3_module>,
              ffi.Pointer<ffi.Void>)>> create_module;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt> pStmt)>>
      data_count;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3> Function(ffi.Pointer<sqlite3_stmt>)>> db_handle;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>>
      declare_vtab;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>>
      enable_shared_cache;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3> db)>>
      errcode;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3>)>>
      errmsg;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3>)>>
      errmsg16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              sqlite3_callback,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> exec;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      expired;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt> pStmt)>>
      finalize;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      free;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<ffi.Pointer<ffi.Char>> result)>>
      free_table;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      get_autocommit;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_context>, ffi.Int)>> get_auxdata;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Pointer<ffi.Char>>>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> get_table;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> global_recover;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3>)>>
      interruptx;

  external ffi
      .Pointer<ffi.NativeFunction<sqlite_int64 Function(ffi.Pointer<sqlite3>)>>
      last_insert_rowid;

  external ffi.Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>
      libversion;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>>
      libversion_number;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int)>>
      malloc;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>> mprintf;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Pointer<sqlite3>>)>> open;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Pointer<sqlite3>>)>>
      open16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> prepare;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Void>>)>> prepare16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>,
                          ffi.Pointer<ffi.Char>, sqlite_uint64)>>,
              ffi.Pointer<ffi.Void>)>> profile;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>> progress_handler;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int)>>
      realloc;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt> pStmt)>>
      reset;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_context>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> result_blob;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Double)>>
      result_double;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Pointer<ffi.Char>,
              ffi.Int)>> result_error;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Pointer<ffi.Void>,
              ffi.Int)>> result_error16;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>> result_int;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, sqlite_int64)>>
      result_int64;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      result_null;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_context>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> result_text;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      result_text16;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      result_text16be;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Int,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      result_text16le;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>, ffi.Pointer<sqlite3_value>)>>
      result_value;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>> rollback_hook;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Char>,
                          ffi.Pointer<ffi.Char>,
                          ffi.Pointer<ffi.Char>,
                          ffi.Pointer<ffi.Char>)>>,
              ffi.Pointer<ffi.Void>)>> set_authorizer;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_context>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> set_auxdata;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(
                  ffi.Int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>
      xsnprintf;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      step;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>)>> table_column_metadata;

  external ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>> thread_cleanup;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      total_changes;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Char>)>>,
              ffi.Pointer<ffi.Void>)>> trace;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_stmt>, ffi.Pointer<sqlite3_stmt>)>>
      transfer_bindings;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Char>,
                          ffi.Pointer<ffi.Char>,
                          sqlite_int64)>>,
              ffi.Pointer<ffi.Void>)>> update_hook;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_context>)>>
      user_data;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>>
      value_blob;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_bytes;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_bytes16;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Double Function(ffi.Pointer<sqlite3_value>)>>
      value_double;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_int;

  external ffi.Pointer<
          ffi.NativeFunction<sqlite_int64 Function(ffi.Pointer<sqlite3_value>)>>
      value_int64;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_numeric_type;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.UnsignedChar> Function(
              ffi.Pointer<sqlite3_value>)>> value_text;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>>
      value_text16;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>>
      value_text16be;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<sqlite3_value>)>>
      value_text16le;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_type;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>, va_list)>>
      vmprintf;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>, ffi.Int)>>
      overload_function;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> prepare_v2;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Void>>)>> prepare16_v2;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      clear_bindings;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<sqlite3_module>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      create_module_v2;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>>
      bind_zeroblob;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_blob>)>>
      blob_bytes;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_blob>)>>
      blob_close;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              sqlite3_int64,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_blob>>)>> blob_open;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_blob>, ffi.Pointer<ffi.Void>,
              ffi.Int, ffi.Int)>> blob_read;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_blob>, ffi.Pointer<ffi.Void>,
              ffi.Int, ffi.Int)>> blob_write;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Int,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Int Function(
                              ffi.Pointer<ffi.Void>,
                              ffi.Int,
                              ffi.Pointer<ffi.Void>,
                              ffi.Int,
                              ffi.Pointer<ffi.Void>)>>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      create_collation_v2;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>, ffi.Int,
              ffi.Pointer<ffi.Void>)>> file_control;

  external ffi.Pointer<ffi.NativeFunction<sqlite3_int64 Function(ffi.Int)>>
      memory_highwater;

  external ffi.Pointer<ffi.NativeFunction<sqlite3_int64 Function()>>
      memory_used;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<sqlite3_mutex> Function(ffi.Int)>>
      mutex_alloc;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      mutex_enter;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      mutex_free;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      mutex_leave;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>>
      mutex_try;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<sqlite3>>,
              ffi.Int,
              ffi.Pointer<ffi.Char>)>> open_v2;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>>
      release_memory;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      result_error_nomem;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_context>)>>
      result_error_toobig;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>> sleep;

  external ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Int)>>
      soft_heap_limit;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_vfs> Function(ffi.Pointer<ffi.Char>)>> vfs_find;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Int)>>
      vfs_register;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vfs>)>>
      vfs_unregister;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> xthreadsafe;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>>
      result_zeroblob;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int)>>
      result_error_code;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>>
      test_control;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Void>)>>
      randomness;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<sqlite3> Function(ffi.Pointer<sqlite3_context>)>>
      context_db_handle;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      extended_result_codes;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int, ffi.Int)>> limit;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_stmt> Function(
              ffi.Pointer<sqlite3>, ffi.Pointer<sqlite3_stmt>)>> next_stmt;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>)>> sql;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Int, ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Int>,
              ffi.Int)>> status;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>>
      backup_finish;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_backup> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>)>> backup_init;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>>
      backup_pagecount;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_backup>)>>
      backup_remaining;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_backup>, ffi.Int)>> backup_step;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int)>>
      compileoption_get;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char>)>>
      compileoption_used;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>)>>)>> create_function_v2;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      db_config;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_mutex> Function(ffi.Pointer<sqlite3>)>> db_mutex;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int, ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>, ffi.Int)>> db_status;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      extended_errcode;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Int, ffi.Pointer<ffi.Char>)>>
      log;

  external ffi
      .Pointer<ffi.NativeFunction<sqlite3_int64 Function(sqlite3_int64)>>
      soft_heap_limit64;

  external ffi.Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>
      sourceid;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_stmt>, ffi.Int, ffi.Int)>>
      stmt_status;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Int)>> strnicmp;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Pointer<ffi.Void>>, ffi.Int)>>,
              ffi.Pointer<ffi.Void>)>> unlock_notify;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      wal_autocheckpoint;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>>
      wal_checkpoint;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Pointer<sqlite3>,
                          ffi.Pointer<ffi.Char>,
                          ffi.Int)>>,
              ffi.Pointer<ffi.Void>)>> wal_hook;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_blob>, sqlite3_int64)>>
      blob_reopen;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      vtab_config;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      vtab_on_conflict;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      close_v2;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>> db_filename;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>>
      db_readonly;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      db_release_memory;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int)>>
      errstr;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      stmt_busy;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      stmt_readonly;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>
      stricmp;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, ffi.Int)>>
      uri_boolean;

  external ffi.Pointer<
          ffi.NativeFunction<
              sqlite3_int64 Function(
                  ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, sqlite3_int64)>>
      uri_int64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>> uri_parameter;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Int, ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>, va_list)>> xvsnprintf;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>, ffi.Int,
              ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Int>)>> wal_checkpoint_v2;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>)>>
      auto_extension;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              sqlite3_uint64,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> bind_blob64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_stmt>,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              sqlite3_uint64,
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
              ffi.UnsignedChar)>> bind_text64;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>)>>
      cancel_auto_extension;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> load_extension;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(sqlite3_uint64)>>
      malloc64;

  external ffi.Pointer<
      ffi.NativeFunction<sqlite3_uint64 Function(ffi.Pointer<ffi.Void>)>> msize;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>, sqlite3_uint64)>> realloc64;

  external ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>
      reset_auto_extension;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>,
                  ffi.Pointer<ffi.Void>,
                  sqlite3_uint64,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      result_blob64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_context>,
              ffi.Pointer<ffi.Char>,
              sqlite3_uint64,
              ffi.Pointer<
                  ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>,
              ffi.UnsignedChar)>> result_text64;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>>
      strglob;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<sqlite3_value> Function(ffi.Pointer<sqlite3_value>)>>
      value_dup;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_value>)>>
      value_free;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3_context>, sqlite3_uint64)>>
      result_zeroblob64;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_stmt>, ffi.Int, sqlite3_uint64)>>
      bind_zeroblob64;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.UnsignedInt Function(ffi.Pointer<sqlite3_value>)>>
      value_subtype;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.UnsignedInt)>>
      result_subtype;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Int, ffi.Pointer<sqlite3_int64>,
              ffi.Pointer<sqlite3_int64>, ffi.Int)>> status64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
              ffi.UnsignedInt)>> strlike;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      db_cacheflush;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      system_errno;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.UnsignedInt,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(ffi.UnsignedInt, ffi.Pointer<ffi.Void>,
                          ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>> trace_v2;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>)>>
      expanded_sql;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3>, sqlite3_int64)>>
      set_last_insert_rowid;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.UnsignedInt,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> prepare_v3;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.UnsignedInt,
              ffi.Pointer<ffi.Pointer<sqlite3_stmt>>,
              ffi.Pointer<ffi.Pointer<ffi.Void>>)>> prepare16_v3;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_stmt>,
                  ffi.Int,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      bind_pointer;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_context>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<ffi.Char>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      result_pointer;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(
                  ffi.Pointer<sqlite3_value>, ffi.Pointer<ffi.Char>)>>
      value_pointer;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_context>)>>
      vtab_nochange;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_nochange;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<sqlite3_index_info>, ffi.Int)>> vtab_collation;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> keyword_count;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Int, ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Int>)>> keyword_name;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char>, ffi.Int)>>
      keyword_check;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_str> Function(ffi.Pointer<sqlite3>)>> str_new;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_str>)>> str_finish;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>)>> str_appendf;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>, va_list)>>
      str_vappendf;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>, ffi.Int)>>
      str_append;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_str>, ffi.Pointer<ffi.Char>)>> str_appendall;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_str>, ffi.Int, ffi.Char)>>
      str_appendchar;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_str>)>>
      str_reset;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_str>)>>
      str_errcode;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_str>)>>
      str_length;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_str>)>> str_value;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<sqlite3_context>, ffi.Int,
                          ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(
                          ffi.Pointer<ffi.Void>)>>)>> create_window_function;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3_stmt>)>>
      normalized_sql;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_stmt>)>>
      stmt_isexplain;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_frombind;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Pointer<ffi.Char>>)>>
      drop_modules;

  external ffi
      .Pointer<ffi.NativeFunction<sqlite3_int64 Function(sqlite3_int64)>>
      hard_heap_limit64;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>, ffi.Int)>>
      uri_key;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>>
      filename_database;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>>
      filename_journal;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>> filename_wal;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> create_filename;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>
      free_filename;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<sqlite3_file> Function(ffi.Pointer<ffi.Char>)>>
      database_file_object;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<sqlite3>, ffi.Pointer<ffi.Char>)>>
      txn_state;

  external ffi
      .Pointer<ffi.NativeFunction<sqlite3_int64 Function(ffi.Pointer<sqlite3>)>>
      changes64;

  external ffi
      .Pointer<ffi.NativeFunction<sqlite3_int64 Function(ffi.Pointer<sqlite3>)>>
      total_changes64;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.UnsignedInt Function(
                              ffi.Pointer<ffi.Void>,
                              ffi.Pointer<ffi.Char>,
                              ffi.UnsignedInt,
                              ffi.UnsignedInt,
                              ffi.UnsignedInt)>>,
                  ffi.Pointer<ffi.Void>,
                  ffi.Pointer<
                      ffi.NativeFunction<
                          ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>>
      autovacuum_pages;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      error_offset;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_index_info>, ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_value>>)>> vtab_rhs_value;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_index_info>)>>
      vtab_distinct;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_index_info>, ffi.Int, ffi.Int)>> vtab_in;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_value>,
              ffi.Pointer<ffi.Pointer<sqlite3_value>>)>> vtab_in_first;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_value>,
              ffi.Pointer<ffi.Pointer<sqlite3_value>>)>> vtab_in_next;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.UnsignedChar>,
              sqlite3_int64,
              sqlite3_int64,
              ffi.UnsignedInt)>> deserialize;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.UnsignedChar> Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<sqlite3_int64>,
              ffi.UnsignedInt)>> serialize;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(ffi.Pointer<sqlite3>, ffi.Int)>>
      db_name;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_value>)>>
      value_encoding;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3>)>>
      is_interrupted;
}

final class sqlite3_context extends ffi.Opaque {}

final class sqlite3_stmt extends ffi.Opaque {}

typedef sqlite_int64 = ffi.LongLong;

final class sqlite3_value extends ffi.Opaque {}

final class sqlite3_module extends ffi.Struct {
  @ffi.Int()
  external int iVersion;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Pointer<sqlite3_vtab>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> xCreate;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Pointer<sqlite3_vtab>>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>)>> xConnect;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vtab>, ffi.Pointer<sqlite3_index_info>)>>
      xBestIndex;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xDisconnect;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xDestroy;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab,
              ffi.Pointer<ffi.Pointer<sqlite3_vtab_cursor>> ppCursor)>> xOpen;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab_cursor>)>>
      xClose;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_vtab_cursor>,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_value>>)>> xFilter;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab_cursor>)>>
      xNext;

  external ffi.Pointer<
      ffi
      .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab_cursor>)>> xEof;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vtab_cursor>,
              ffi.Pointer<sqlite3_context>, ffi.Int)>> xColumn;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vtab_cursor>,
              ffi.Pointer<sqlite3_int64>)>> xRowid;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_vtab>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<sqlite3_value>>,
              ffi.Pointer<sqlite3_int64>)>> xUpdate;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xBegin;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xSync;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xCommit;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab> pVTab)>>
      xRollback;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_vtab> pVtab,
              ffi.Int nArg,
              ffi.Pointer<ffi.Char> zName,
              ffi.Pointer<
                      ffi.Pointer<
                          ffi.NativeFunction<
                              ffi.Void Function(
                                  ffi.Pointer<sqlite3_context>,
                                  ffi.Int,
                                  ffi.Pointer<ffi.Pointer<sqlite3_value>>)>>>
                  pxFunc,
              ffi.Pointer<ffi.Pointer<ffi.Void>> ppArg)>> xFindFunction;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vtab> pVtab, ffi.Pointer<ffi.Char> zNew)>>
      xRename;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab>, ffi.Int)>>
      xSavepoint;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab>, ffi.Int)>>
      xRelease;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vtab>, ffi.Int)>>
      xRollbackTo;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Char>)>>
      xShadowName;
}

final class sqlite3_vtab extends ffi.Struct {
  external ffi.Pointer<sqlite3_module> pModule;

  @ffi.Int()
  external int nRef;

  external ffi.Pointer<ffi.Char> zErrMsg;
}

final class sqlite3_index_info extends ffi.Struct {
  @ffi.Int()
  external int nConstraint;

  external ffi.Pointer<sqlite3_index_constraint> aConstraint;

  @ffi.Int()
  external int nOrderBy;

  external ffi.Pointer<sqlite3_index_orderby> aOrderBy;

  external ffi.Pointer<sqlite3_index_constraint_usage> aConstraintUsage;

  @ffi.Int()
  external int idxNum;

  external ffi.Pointer<ffi.Char> idxStr;

  @ffi.Int()
  external int needToFreeIdxStr;

  @ffi.Int()
  external int orderByConsumed;

  @ffi.Double()
  external double estimatedCost;

  @sqlite3_int64()
  external int estimatedRows;

  @ffi.Int()
  external int idxFlags;

  @sqlite3_uint64()
  external int colUsed;
}

final class sqlite3_index_constraint extends ffi.Struct {
  @ffi.Int()
  external int iColumn;

  @ffi.UnsignedChar()
  external int op;

  @ffi.UnsignedChar()
  external int usable;

  @ffi.Int()
  external int iTermOffset;
}

final class sqlite3_index_orderby extends ffi.Struct {
  @ffi.Int()
  external int iColumn;

  @ffi.UnsignedChar()
  external int desc;
}

final class sqlite3_index_constraint_usage extends ffi.Struct {
  @ffi.Int()
  external int argvIndex;

  @ffi.UnsignedChar()
  external int omit;
}

typedef sqlite3_int64 = sqlite_int64;
typedef sqlite3_uint64 = sqlite_uint64;
typedef sqlite_uint64 = ffi.UnsignedLongLong;

final class sqlite3_vtab_cursor extends ffi.Struct {
  external ffi.Pointer<sqlite3_vtab> pVtab;
}

typedef sqlite3_callback = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Int Function(
            ffi.Pointer<ffi.Void>,
            ffi.Int,
            ffi.Pointer<ffi.Pointer<ffi.Char>>,
            ffi.Pointer<ffi.Pointer<ffi.Char>>)>>;
typedef va_list = __builtin_va_list;
typedef __builtin_va_list = ffi.Pointer<ffi.Char>;

final class sqlite3_blob extends ffi.Opaque {}

final class sqlite3_vfs extends ffi.Struct {
  @ffi.Int()
  external int iVersion;

  @ffi.Int()
  external int szOsFile;

  @ffi.Int()
  external int mxPathname;

  external ffi.Pointer<sqlite3_vfs> pNext;

  external ffi.Pointer<ffi.Char> zName;

  external ffi.Pointer<ffi.Void> pAppData;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vfs>, sqlite3_filename,
              ffi.Pointer<sqlite3_file>, ffi.Int, ffi.Pointer<ffi.Int>)>> xOpen;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>, ffi.Int)>>
      xDelete;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>,
              ffi.Int, ffi.Pointer<ffi.Int>)>> xAccess;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>,
              ffi.Int, ffi.Pointer<ffi.Char>)>> xFullPathname;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>)>> xDlOpen;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Int, ffi.Pointer<ffi.Char>)>>
      xDlError;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>> Function(
              ffi.Pointer<sqlite3_vfs>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Char>)>> xDlSym;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Void>)>> xDlClose;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Int, ffi.Pointer<ffi.Char>)>>
      xRandomness;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Int)>>
      xSleep;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Double>)>> xCurrentTime;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Int, ffi.Pointer<ffi.Char>)>>
      xGetLastError;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Pointer<sqlite3_int64>)>>
      xCurrentTimeInt64;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>,
              sqlite3_syscall_ptr)>> xSetSystemCall;

  external ffi.Pointer<
      ffi.NativeFunction<
          sqlite3_syscall_ptr Function(
              ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>)>> xGetSystemCall;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Char> Function(
                  ffi.Pointer<sqlite3_vfs>, ffi.Pointer<ffi.Char>)>>
      xNextSystemCall;
}

typedef sqlite3_filename = ffi.Pointer<ffi.Char>;
typedef sqlite3_syscall_ptr
    = ffi.Pointer<ffi.NativeFunction<ffi.Void Function()>>;

final class sqlite3_backup extends ffi.Opaque {}

final class sqlite3_str extends ffi.Opaque {}

final class sqlite3_mem_methods extends ffi.Struct {
  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Int)>>
      xMalloc;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xFree;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>, ffi.Int)>>
      xRealloc;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>
      xSize;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Int)>> xRoundup;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>
      xInit;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xShutdown;

  external ffi.Pointer<ffi.Void> pAppData;
}

final class sqlite3_mutex_methods extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> xMutexInit;

  external ffi.Pointer<ffi.NativeFunction<ffi.Int Function()>> xMutexEnd;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Pointer<sqlite3_mutex> Function(ffi.Int)>>
      xMutexAlloc;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexFree;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexEnter;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexTry;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexLeave;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexHeld;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_mutex>)>>
      xMutexNotheld;
}

final class sqlite3_pcache extends ffi.Opaque {}

final class sqlite3_pcache_page extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pBuf;

  external ffi.Pointer<ffi.Void> pExtra;
}

final class sqlite3_pcache_methods2 extends ffi.Struct {
  @ffi.Int()
  external int iVersion;

  external ffi.Pointer<ffi.Void> pArg;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>
      xInit;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xShutdown;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_pcache> Function(
              ffi.Int szPage, ffi.Int szExtra, ffi.Int bPurgeable)>> xCreate;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_pcache>, ffi.Int)>> xCachesize;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_pcache>)>>
      xPagecount;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_pcache_page> Function(
              ffi.Pointer<sqlite3_pcache>, ffi.UnsignedInt, ffi.Int)>> xFetch;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_pcache>,
              ffi.Pointer<sqlite3_pcache_page>, ffi.Int)>> xUnpin;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<sqlite3_pcache>,
              ffi.Pointer<sqlite3_pcache_page>,
              ffi.UnsignedInt,
              ffi.UnsignedInt)>> xRekey;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_pcache>, ffi.UnsignedInt)>>
      xTruncate;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_pcache>)>>
      xDestroy;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_pcache>)>>
      xShrink;
}

final class sqlite3_pcache_methods extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pArg;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>
      xInit;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xShutdown;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<sqlite3_pcache> Function(
              ffi.Int szPage, ffi.Int bPurgeable)>> xCreate;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_pcache>, ffi.Int)>> xCachesize;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Int Function(ffi.Pointer<sqlite3_pcache>)>>
      xPagecount;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<sqlite3_pcache>, ffi.UnsignedInt, ffi.Int)>> xFetch;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Pointer<sqlite3_pcache>, ffi.Pointer<ffi.Void>, ffi.Int)>>
      xUnpin;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<sqlite3_pcache>, ffi.Pointer<ffi.Void>,
              ffi.UnsignedInt, ffi.UnsignedInt)>> xRekey;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Pointer<sqlite3_pcache>, ffi.UnsignedInt)>>
      xTruncate;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<sqlite3_pcache>)>>
      xDestroy;
}

final class sqlite3_snapshot extends ffi.Struct {
  @ffi.Array.multi([48])
  external ffi.Array<ffi.UnsignedChar> hidden;
}

final class sqlite3_rtree_geometry extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pContext;

  @ffi.Int()
  external int nParam;

  external ffi.Pointer<sqlite3_rtree_dbl> aParam;

  external ffi.Pointer<ffi.Void> pUser;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDelUser;
}

typedef sqlite3_rtree_dbl = ffi.Double;

final class sqlite3_rtree_query_info extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pContext;

  @ffi.Int()
  external int nParam;

  external ffi.Pointer<sqlite3_rtree_dbl> aParam;

  external ffi.Pointer<ffi.Void> pUser;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      xDelUser;

  external ffi.Pointer<sqlite3_rtree_dbl> aCoord;

  external ffi.Pointer<ffi.UnsignedInt> anQueue;

  @ffi.Int()
  external int nCoord;

  @ffi.Int()
  external int iLevel;

  @ffi.Int()
  external int mxLevel;

  @sqlite3_int64()
  external int iRowid;

  @sqlite3_rtree_dbl()
  external double rParentScore;

  @ffi.Int()
  external int eParentWithin;

  @ffi.Int()
  external int eWithin;

  @sqlite3_rtree_dbl()
  external double rScore;

  external ffi.Pointer<ffi.Pointer<sqlite3_value>> apSqlParam;
}

final class Fts5ExtensionApi extends ffi.Struct {
  @ffi.Int()
  external int iVersion;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(ffi.Pointer<Fts5Context>)>> xUserData;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<Fts5Context>)>>
      xColumnCount;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>, ffi.Pointer<sqlite3_int64>)>> xRowCount;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<Fts5Context>, ffi.Int,
              ffi.Pointer<sqlite3_int64>)>> xColumnTotalSize;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Char>,
                          ffi.Int,
                          ffi.Int,
                          ffi.Int)>>)>> xTokenize;

  external ffi
      .Pointer<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<Fts5Context>)>>
      xPhraseCount;

  external ffi.Pointer<
          ffi
          .NativeFunction<ffi.Int Function(ffi.Pointer<Fts5Context>, ffi.Int)>>
      xPhraseSize;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(ffi.Pointer<Fts5Context>, ffi.Pointer<ffi.Int>)>>
      xInstCount;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Int,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>)>> xInst;

  external ffi.Pointer<
          ffi.NativeFunction<sqlite3_int64 Function(ffi.Pointer<Fts5Context>)>>
      xRowid;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Pointer<ffi.Int>)>> xColumnText;

  external ffi.Pointer<
          ffi.NativeFunction<
              ffi.Int Function(
                  ffi.Pointer<Fts5Context>, ffi.Int, ffi.Pointer<ffi.Int>)>>
      xColumnSize;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<Fts5ExtensionApi>,
                          ffi.Pointer<Fts5Context>,
                          ffi.Pointer<ffi.Void>)>>)>> xQueryPhrase;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>)>>)>> xSetAuxdata;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<Fts5Context>, ffi.Int)>> xGetAuxdata;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Int,
              ffi.Pointer<Fts5PhraseIter>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>)>> xPhraseFirst;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<Fts5Context>,
              ffi.Pointer<Fts5PhraseIter>,
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>)>> xPhraseNext;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Context>,
              ffi.Int,
              ffi.Pointer<Fts5PhraseIter>,
              ffi.Pointer<ffi.Int>)>> xPhraseFirstColumn;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<Fts5Context>,
              ffi.Pointer<Fts5PhraseIter>,
              ffi.Pointer<ffi.Int>)>> xPhraseNextColumn;
}

final class Fts5Context extends ffi.Opaque {}

final class Fts5PhraseIter extends ffi.Struct {
  external ffi.Pointer<ffi.UnsignedChar> a;

  external ffi.Pointer<ffi.UnsignedChar> b;
}

final class Fts5Tokenizer extends ffi.Opaque {}

final class fts5_tokenizer extends ffi.Struct {
  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Pointer<ffi.Char>>,
              ffi.Int,
              ffi.Pointer<ffi.Pointer<Fts5Tokenizer>>)>> xCreate;

  external ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<Fts5Tokenizer>)>>
      xDelete;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<Fts5Tokenizer>,
              ffi.Pointer<ffi.Void>,
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Int Function(
                          ffi.Pointer<ffi.Void>,
                          ffi.Int,
                          ffi.Pointer<ffi.Char>,
                          ffi.Int,
                          ffi.Int,
                          ffi.Int)>>)>> xTokenize;
}

final class fts5_api extends ffi.Struct {
  @ffi.Int()
  external int iVersion;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<fts5_api> pApi,
              ffi.Pointer<ffi.Char> zName,
              ffi.Pointer<ffi.Void> pContext,
              ffi.Pointer<fts5_tokenizer> pTokenizer,
              ffi.Pointer<
                      ffi
                      .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
                  xDestroy)>> xCreateTokenizer;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<fts5_api> pApi,
              ffi.Pointer<ffi.Char> zName,
              ffi.Pointer<ffi.Pointer<ffi.Void>> ppContext,
              ffi.Pointer<fts5_tokenizer> pTokenizer)>> xFindTokenizer;

  external ffi.Pointer<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<fts5_api> pApi,
              ffi.Pointer<ffi.Char> zName,
              ffi.Pointer<ffi.Void> pContext,
              fts5_extension_function xFunction,
              ffi.Pointer<
                      ffi
                      .NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
                  xDestroy)>> xCreateFunction;
}

typedef fts5_extension_function = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Void Function(
            ffi.Pointer<Fts5ExtensionApi> pApi,
            ffi.Pointer<Fts5Context> pFts,
            ffi.Pointer<sqlite3_context> pCtx,
            ffi.Int nVal,
            ffi.Pointer<ffi.Pointer<sqlite3_value>> apVal)>>;

const int __GNUC_VA_LIST = 1;

const String SQLITE_VERSION = '3.42.0';

const int SQLITE_VERSION_NUMBER = 3042000;

const String SQLITE_SOURCE_ID =
    '2023-05-16 12:36:15 831d0fb2836b71c9bc51067c49fee4b8f18047814f2ff22d817d25195cf350b0';

const int SQLITE_OK = 0;

const int SQLITE_ERROR = 1;

const int SQLITE_INTERNAL = 2;

const int SQLITE_PERM = 3;

const int SQLITE_ABORT = 4;

const int SQLITE_BUSY = 5;

const int SQLITE_LOCKED = 6;

const int SQLITE_NOMEM = 7;

const int SQLITE_READONLY = 8;

const int SQLITE_INTERRUPT = 9;

const int SQLITE_IOERR = 10;

const int SQLITE_CORRUPT = 11;

const int SQLITE_NOTFOUND = 12;

const int SQLITE_FULL = 13;

const int SQLITE_CANTOPEN = 14;

const int SQLITE_PROTOCOL = 15;

const int SQLITE_EMPTY = 16;

const int SQLITE_SCHEMA = 17;

const int SQLITE_TOOBIG = 18;

const int SQLITE_CONSTRAINT = 19;

const int SQLITE_MISMATCH = 20;

const int SQLITE_MISUSE = 21;

const int SQLITE_NOLFS = 22;

const int SQLITE_AUTH = 23;

const int SQLITE_FORMAT = 24;

const int SQLITE_RANGE = 25;

const int SQLITE_NOTADB = 26;

const int SQLITE_NOTICE = 27;

const int SQLITE_WARNING = 28;

const int SQLITE_ROW = 100;

const int SQLITE_DONE = 101;

const int SQLITE_ERROR_MISSING_COLLSEQ = 257;

const int SQLITE_ERROR_RETRY = 513;

const int SQLITE_ERROR_SNAPSHOT = 769;

const int SQLITE_IOERR_READ = 266;

const int SQLITE_IOERR_SHORT_READ = 522;

const int SQLITE_IOERR_WRITE = 778;

const int SQLITE_IOERR_FSYNC = 1034;

const int SQLITE_IOERR_DIR_FSYNC = 1290;

const int SQLITE_IOERR_TRUNCATE = 1546;

const int SQLITE_IOERR_FSTAT = 1802;

const int SQLITE_IOERR_UNLOCK = 2058;

const int SQLITE_IOERR_RDLOCK = 2314;

const int SQLITE_IOERR_DELETE = 2570;

const int SQLITE_IOERR_BLOCKED = 2826;

const int SQLITE_IOERR_NOMEM = 3082;

const int SQLITE_IOERR_ACCESS = 3338;

const int SQLITE_IOERR_CHECKRESERVEDLOCK = 3594;

const int SQLITE_IOERR_LOCK = 3850;

const int SQLITE_IOERR_CLOSE = 4106;

const int SQLITE_IOERR_DIR_CLOSE = 4362;

const int SQLITE_IOERR_SHMOPEN = 4618;

const int SQLITE_IOERR_SHMSIZE = 4874;

const int SQLITE_IOERR_SHMLOCK = 5130;

const int SQLITE_IOERR_SHMMAP = 5386;

const int SQLITE_IOERR_SEEK = 5642;

const int SQLITE_IOERR_DELETE_NOENT = 5898;

const int SQLITE_IOERR_MMAP = 6154;

const int SQLITE_IOERR_GETTEMPPATH = 6410;

const int SQLITE_IOERR_CONVPATH = 6666;

const int SQLITE_IOERR_VNODE = 6922;

const int SQLITE_IOERR_AUTH = 7178;

const int SQLITE_IOERR_BEGIN_ATOMIC = 7434;

const int SQLITE_IOERR_COMMIT_ATOMIC = 7690;

const int SQLITE_IOERR_ROLLBACK_ATOMIC = 7946;

const int SQLITE_IOERR_DATA = 8202;

const int SQLITE_IOERR_CORRUPTFS = 8458;

const int SQLITE_LOCKED_SHAREDCACHE = 262;

const int SQLITE_LOCKED_VTAB = 518;

const int SQLITE_BUSY_RECOVERY = 261;

const int SQLITE_BUSY_SNAPSHOT = 517;

const int SQLITE_BUSY_TIMEOUT = 773;

const int SQLITE_CANTOPEN_NOTEMPDIR = 270;

const int SQLITE_CANTOPEN_ISDIR = 526;

const int SQLITE_CANTOPEN_FULLPATH = 782;

const int SQLITE_CANTOPEN_CONVPATH = 1038;

const int SQLITE_CANTOPEN_DIRTYWAL = 1294;

const int SQLITE_CANTOPEN_SYMLINK = 1550;

const int SQLITE_CORRUPT_VTAB = 267;

const int SQLITE_CORRUPT_SEQUENCE = 523;

const int SQLITE_CORRUPT_INDEX = 779;

const int SQLITE_READONLY_RECOVERY = 264;

const int SQLITE_READONLY_CANTLOCK = 520;

const int SQLITE_READONLY_ROLLBACK = 776;

const int SQLITE_READONLY_DBMOVED = 1032;

const int SQLITE_READONLY_CANTINIT = 1288;

const int SQLITE_READONLY_DIRECTORY = 1544;

const int SQLITE_ABORT_ROLLBACK = 516;

const int SQLITE_CONSTRAINT_CHECK = 275;

const int SQLITE_CONSTRAINT_COMMITHOOK = 531;

const int SQLITE_CONSTRAINT_FOREIGNKEY = 787;

const int SQLITE_CONSTRAINT_FUNCTION = 1043;

const int SQLITE_CONSTRAINT_NOTNULL = 1299;

const int SQLITE_CONSTRAINT_PRIMARYKEY = 1555;

const int SQLITE_CONSTRAINT_TRIGGER = 1811;

const int SQLITE_CONSTRAINT_UNIQUE = 2067;

const int SQLITE_CONSTRAINT_VTAB = 2323;

const int SQLITE_CONSTRAINT_ROWID = 2579;

const int SQLITE_CONSTRAINT_PINNED = 2835;

const int SQLITE_CONSTRAINT_DATATYPE = 3091;

const int SQLITE_NOTICE_RECOVER_WAL = 283;

const int SQLITE_NOTICE_RECOVER_ROLLBACK = 539;

const int SQLITE_NOTICE_RBU = 795;

const int SQLITE_WARNING_AUTOINDEX = 284;

const int SQLITE_AUTH_USER = 279;

const int SQLITE_OK_LOAD_PERMANENTLY = 256;

const int SQLITE_OK_SYMLINK = 512;

const int SQLITE_OPEN_READONLY = 1;

const int SQLITE_OPEN_READWRITE = 2;

const int SQLITE_OPEN_CREATE = 4;

const int SQLITE_OPEN_DELETEONCLOSE = 8;

const int SQLITE_OPEN_EXCLUSIVE = 16;

const int SQLITE_OPEN_AUTOPROXY = 32;

const int SQLITE_OPEN_URI = 64;

const int SQLITE_OPEN_MEMORY = 128;

const int SQLITE_OPEN_MAIN_DB = 256;

const int SQLITE_OPEN_TEMP_DB = 512;

const int SQLITE_OPEN_TRANSIENT_DB = 1024;

const int SQLITE_OPEN_MAIN_JOURNAL = 2048;

const int SQLITE_OPEN_TEMP_JOURNAL = 4096;

const int SQLITE_OPEN_SUBJOURNAL = 8192;

const int SQLITE_OPEN_SUPER_JOURNAL = 16384;

const int SQLITE_OPEN_NOMUTEX = 32768;

const int SQLITE_OPEN_FULLMUTEX = 65536;

const int SQLITE_OPEN_SHAREDCACHE = 131072;

const int SQLITE_OPEN_PRIVATECACHE = 262144;

const int SQLITE_OPEN_WAL = 524288;

const int SQLITE_OPEN_NOFOLLOW = 16777216;

const int SQLITE_OPEN_EXRESCODE = 33554432;

const int SQLITE_OPEN_MASTER_JOURNAL = 16384;

const int SQLITE_IOCAP_ATOMIC = 1;

const int SQLITE_IOCAP_ATOMIC512 = 2;

const int SQLITE_IOCAP_ATOMIC1K = 4;

const int SQLITE_IOCAP_ATOMIC2K = 8;

const int SQLITE_IOCAP_ATOMIC4K = 16;

const int SQLITE_IOCAP_ATOMIC8K = 32;

const int SQLITE_IOCAP_ATOMIC16K = 64;

const int SQLITE_IOCAP_ATOMIC32K = 128;

const int SQLITE_IOCAP_ATOMIC64K = 256;

const int SQLITE_IOCAP_SAFE_APPEND = 512;

const int SQLITE_IOCAP_SEQUENTIAL = 1024;

const int SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 2048;

const int SQLITE_IOCAP_POWERSAFE_OVERWRITE = 4096;

const int SQLITE_IOCAP_IMMUTABLE = 8192;

const int SQLITE_IOCAP_BATCH_ATOMIC = 16384;

const int SQLITE_LOCK_NONE = 0;

const int SQLITE_LOCK_SHARED = 1;

const int SQLITE_LOCK_RESERVED = 2;

const int SQLITE_LOCK_PENDING = 3;

const int SQLITE_LOCK_EXCLUSIVE = 4;

const int SQLITE_SYNC_NORMAL = 2;

const int SQLITE_SYNC_FULL = 3;

const int SQLITE_SYNC_DATAONLY = 16;

const int SQLITE_FCNTL_LOCKSTATE = 1;

const int SQLITE_FCNTL_GET_LOCKPROXYFILE = 2;

const int SQLITE_FCNTL_SET_LOCKPROXYFILE = 3;

const int SQLITE_FCNTL_LAST_ERRNO = 4;

const int SQLITE_FCNTL_SIZE_HINT = 5;

const int SQLITE_FCNTL_CHUNK_SIZE = 6;

const int SQLITE_FCNTL_FILE_POINTER = 7;

const int SQLITE_FCNTL_SYNC_OMITTED = 8;

const int SQLITE_FCNTL_WIN32_AV_RETRY = 9;

const int SQLITE_FCNTL_PERSIST_WAL = 10;

const int SQLITE_FCNTL_OVERWRITE = 11;

const int SQLITE_FCNTL_VFSNAME = 12;

const int SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13;

const int SQLITE_FCNTL_PRAGMA = 14;

const int SQLITE_FCNTL_BUSYHANDLER = 15;

const int SQLITE_FCNTL_TEMPFILENAME = 16;

const int SQLITE_FCNTL_MMAP_SIZE = 18;

const int SQLITE_FCNTL_TRACE = 19;

const int SQLITE_FCNTL_HAS_MOVED = 20;

const int SQLITE_FCNTL_SYNC = 21;

const int SQLITE_FCNTL_COMMIT_PHASETWO = 22;

const int SQLITE_FCNTL_WIN32_SET_HANDLE = 23;

const int SQLITE_FCNTL_WAL_BLOCK = 24;

const int SQLITE_FCNTL_ZIPVFS = 25;

const int SQLITE_FCNTL_RBU = 26;

const int SQLITE_FCNTL_VFS_POINTER = 27;

const int SQLITE_FCNTL_JOURNAL_POINTER = 28;

const int SQLITE_FCNTL_WIN32_GET_HANDLE = 29;

const int SQLITE_FCNTL_PDB = 30;

const int SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31;

const int SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32;

const int SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33;

const int SQLITE_FCNTL_LOCK_TIMEOUT = 34;

const int SQLITE_FCNTL_DATA_VERSION = 35;

const int SQLITE_FCNTL_SIZE_LIMIT = 36;

const int SQLITE_FCNTL_CKPT_DONE = 37;

const int SQLITE_FCNTL_RESERVE_BYTES = 38;

const int SQLITE_FCNTL_CKPT_START = 39;

const int SQLITE_FCNTL_EXTERNAL_READER = 40;

const int SQLITE_FCNTL_CKSM_FILE = 41;

const int SQLITE_FCNTL_RESET_CACHE = 42;

const int SQLITE_GET_LOCKPROXYFILE = 2;

const int SQLITE_SET_LOCKPROXYFILE = 3;

const int SQLITE_LAST_ERRNO = 4;

const int SQLITE_ACCESS_EXISTS = 0;

const int SQLITE_ACCESS_READWRITE = 1;

const int SQLITE_ACCESS_READ = 2;

const int SQLITE_SHM_UNLOCK = 1;

const int SQLITE_SHM_LOCK = 2;

const int SQLITE_SHM_SHARED = 4;

const int SQLITE_SHM_EXCLUSIVE = 8;

const int SQLITE_SHM_NLOCK = 8;

const int SQLITE_CONFIG_SINGLETHREAD = 1;

const int SQLITE_CONFIG_MULTITHREAD = 2;

const int SQLITE_CONFIG_SERIALIZED = 3;

const int SQLITE_CONFIG_MALLOC = 4;

const int SQLITE_CONFIG_GETMALLOC = 5;

const int SQLITE_CONFIG_SCRATCH = 6;

const int SQLITE_CONFIG_PAGECACHE = 7;

const int SQLITE_CONFIG_HEAP = 8;

const int SQLITE_CONFIG_MEMSTATUS = 9;

const int SQLITE_CONFIG_MUTEX = 10;

const int SQLITE_CONFIG_GETMUTEX = 11;

const int SQLITE_CONFIG_LOOKASIDE = 13;

const int SQLITE_CONFIG_PCACHE = 14;

const int SQLITE_CONFIG_GETPCACHE = 15;

const int SQLITE_CONFIG_LOG = 16;

const int SQLITE_CONFIG_URI = 17;

const int SQLITE_CONFIG_PCACHE2 = 18;

const int SQLITE_CONFIG_GETPCACHE2 = 19;

const int SQLITE_CONFIG_COVERING_INDEX_SCAN = 20;

const int SQLITE_CONFIG_SQLLOG = 21;

const int SQLITE_CONFIG_MMAP_SIZE = 22;

const int SQLITE_CONFIG_WIN32_HEAPSIZE = 23;

const int SQLITE_CONFIG_PCACHE_HDRSZ = 24;

const int SQLITE_CONFIG_PMASZ = 25;

const int SQLITE_CONFIG_STMTJRNL_SPILL = 26;

const int SQLITE_CONFIG_SMALL_MALLOC = 27;

const int SQLITE_CONFIG_SORTERREF_SIZE = 28;

const int SQLITE_CONFIG_MEMDB_MAXSIZE = 29;

const int SQLITE_DBCONFIG_MAINDBNAME = 1000;

const int SQLITE_DBCONFIG_LOOKASIDE = 1001;

const int SQLITE_DBCONFIG_ENABLE_FKEY = 1002;

const int SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003;

const int SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004;

const int SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005;

const int SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006;

const int SQLITE_DBCONFIG_ENABLE_QPSG = 1007;

const int SQLITE_DBCONFIG_TRIGGER_EQP = 1008;

const int SQLITE_DBCONFIG_RESET_DATABASE = 1009;

const int SQLITE_DBCONFIG_DEFENSIVE = 1010;

const int SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011;

const int SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012;

const int SQLITE_DBCONFIG_DQS_DML = 1013;

const int SQLITE_DBCONFIG_DQS_DDL = 1014;

const int SQLITE_DBCONFIG_ENABLE_VIEW = 1015;

const int SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016;

const int SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017;

const int SQLITE_DBCONFIG_STMT_SCANSTATUS = 1018;

const int SQLITE_DBCONFIG_REVERSE_SCANORDER = 1019;

const int SQLITE_DBCONFIG_MAX = 1019;

const int SQLITE_DENY = 1;

const int SQLITE_IGNORE = 2;

const int SQLITE_CREATE_INDEX = 1;

const int SQLITE_CREATE_TABLE = 2;

const int SQLITE_CREATE_TEMP_INDEX = 3;

const int SQLITE_CREATE_TEMP_TABLE = 4;

const int SQLITE_CREATE_TEMP_TRIGGER = 5;

const int SQLITE_CREATE_TEMP_VIEW = 6;

const int SQLITE_CREATE_TRIGGER = 7;

const int SQLITE_CREATE_VIEW = 8;

const int SQLITE_DELETE = 9;

const int SQLITE_DROP_INDEX = 10;

const int SQLITE_DROP_TABLE = 11;

const int SQLITE_DROP_TEMP_INDEX = 12;

const int SQLITE_DROP_TEMP_TABLE = 13;

const int SQLITE_DROP_TEMP_TRIGGER = 14;

const int SQLITE_DROP_TEMP_VIEW = 15;

const int SQLITE_DROP_TRIGGER = 16;

const int SQLITE_DROP_VIEW = 17;

const int SQLITE_INSERT = 18;

const int SQLITE_PRAGMA = 19;

const int SQLITE_READ = 20;

const int SQLITE_SELECT = 21;

const int SQLITE_TRANSACTION = 22;

const int SQLITE_UPDATE = 23;

const int SQLITE_ATTACH = 24;

const int SQLITE_DETACH = 25;

const int SQLITE_ALTER_TABLE = 26;

const int SQLITE_REINDEX = 27;

const int SQLITE_ANALYZE = 28;

const int SQLITE_CREATE_VTABLE = 29;

const int SQLITE_DROP_VTABLE = 30;

const int SQLITE_FUNCTION = 31;

const int SQLITE_SAVEPOINT = 32;

const int SQLITE_COPY = 0;

const int SQLITE_RECURSIVE = 33;

const int SQLITE_TRACE_STMT = 1;

const int SQLITE_TRACE_PROFILE = 2;

const int SQLITE_TRACE_ROW = 4;

const int SQLITE_TRACE_CLOSE = 8;

const int SQLITE_LIMIT_LENGTH = 0;

const int SQLITE_LIMIT_SQL_LENGTH = 1;

const int SQLITE_LIMIT_COLUMN = 2;

const int SQLITE_LIMIT_EXPR_DEPTH = 3;

const int SQLITE_LIMIT_COMPOUND_SELECT = 4;

const int SQLITE_LIMIT_VDBE_OP = 5;

const int SQLITE_LIMIT_FUNCTION_ARG = 6;

const int SQLITE_LIMIT_ATTACHED = 7;

const int SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;

const int SQLITE_LIMIT_VARIABLE_NUMBER = 9;

const int SQLITE_LIMIT_TRIGGER_DEPTH = 10;

const int SQLITE_LIMIT_WORKER_THREADS = 11;

const int SQLITE_PREPARE_PERSISTENT = 1;

const int SQLITE_PREPARE_NORMALIZE = 2;

const int SQLITE_PREPARE_NO_VTAB = 4;

const int SQLITE_INTEGER = 1;

const int SQLITE_FLOAT = 2;

const int SQLITE_BLOB = 4;

const int SQLITE_NULL = 5;

const int SQLITE_TEXT = 3;

const int SQLITE3_TEXT = 3;

const int SQLITE_UTF8 = 1;

const int SQLITE_UTF16LE = 2;

const int SQLITE_UTF16BE = 3;

const int SQLITE_UTF16 = 4;

const int SQLITE_ANY = 5;

const int SQLITE_UTF16_ALIGNED = 8;

const int SQLITE_DETERMINISTIC = 2048;

const int SQLITE_DIRECTONLY = 524288;

const int SQLITE_SUBTYPE = 1048576;

const int SQLITE_INNOCUOUS = 2097152;

const int SQLITE_WIN32_DATA_DIRECTORY_TYPE = 1;

const int SQLITE_WIN32_TEMP_DIRECTORY_TYPE = 2;

const int SQLITE_TXN_NONE = 0;

const int SQLITE_TXN_READ = 1;

const int SQLITE_TXN_WRITE = 2;

const int SQLITE_INDEX_SCAN_UNIQUE = 1;

const int SQLITE_INDEX_CONSTRAINT_EQ = 2;

const int SQLITE_INDEX_CONSTRAINT_GT = 4;

const int SQLITE_INDEX_CONSTRAINT_LE = 8;

const int SQLITE_INDEX_CONSTRAINT_LT = 16;

const int SQLITE_INDEX_CONSTRAINT_GE = 32;

const int SQLITE_INDEX_CONSTRAINT_MATCH = 64;

const int SQLITE_INDEX_CONSTRAINT_LIKE = 65;

const int SQLITE_INDEX_CONSTRAINT_GLOB = 66;

const int SQLITE_INDEX_CONSTRAINT_REGEXP = 67;

const int SQLITE_INDEX_CONSTRAINT_NE = 68;

const int SQLITE_INDEX_CONSTRAINT_ISNOT = 69;

const int SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;

const int SQLITE_INDEX_CONSTRAINT_ISNULL = 71;

const int SQLITE_INDEX_CONSTRAINT_IS = 72;

const int SQLITE_INDEX_CONSTRAINT_LIMIT = 73;

const int SQLITE_INDEX_CONSTRAINT_OFFSET = 74;

const int SQLITE_INDEX_CONSTRAINT_FUNCTION = 150;

const int SQLITE_MUTEX_FAST = 0;

const int SQLITE_MUTEX_RECURSIVE = 1;

const int SQLITE_MUTEX_STATIC_MAIN = 2;

const int SQLITE_MUTEX_STATIC_MEM = 3;

const int SQLITE_MUTEX_STATIC_MEM2 = 4;

const int SQLITE_MUTEX_STATIC_OPEN = 4;

const int SQLITE_MUTEX_STATIC_PRNG = 5;

const int SQLITE_MUTEX_STATIC_LRU = 6;

const int SQLITE_MUTEX_STATIC_LRU2 = 7;

const int SQLITE_MUTEX_STATIC_PMEM = 7;

const int SQLITE_MUTEX_STATIC_APP1 = 8;

const int SQLITE_MUTEX_STATIC_APP2 = 9;

const int SQLITE_MUTEX_STATIC_APP3 = 10;

const int SQLITE_MUTEX_STATIC_VFS1 = 11;

const int SQLITE_MUTEX_STATIC_VFS2 = 12;

const int SQLITE_MUTEX_STATIC_VFS3 = 13;

const int SQLITE_MUTEX_STATIC_MASTER = 2;

const int SQLITE_TESTCTRL_FIRST = 5;

const int SQLITE_TESTCTRL_PRNG_SAVE = 5;

const int SQLITE_TESTCTRL_PRNG_RESTORE = 6;

const int SQLITE_TESTCTRL_PRNG_RESET = 7;

const int SQLITE_TESTCTRL_BITVEC_TEST = 8;

const int SQLITE_TESTCTRL_FAULT_INSTALL = 9;

const int SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10;

const int SQLITE_TESTCTRL_PENDING_BYTE = 11;

const int SQLITE_TESTCTRL_ASSERT = 12;

const int SQLITE_TESTCTRL_ALWAYS = 13;

const int SQLITE_TESTCTRL_RESERVE = 14;

const int SQLITE_TESTCTRL_OPTIMIZATIONS = 15;

const int SQLITE_TESTCTRL_ISKEYWORD = 16;

const int SQLITE_TESTCTRL_SCRATCHMALLOC = 17;

const int SQLITE_TESTCTRL_INTERNAL_FUNCTIONS = 17;

const int SQLITE_TESTCTRL_LOCALTIME_FAULT = 18;

const int SQLITE_TESTCTRL_EXPLAIN_STMT = 19;

const int SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD = 19;

const int SQLITE_TESTCTRL_NEVER_CORRUPT = 20;

const int SQLITE_TESTCTRL_VDBE_COVERAGE = 21;

const int SQLITE_TESTCTRL_BYTEORDER = 22;

const int SQLITE_TESTCTRL_ISINIT = 23;

const int SQLITE_TESTCTRL_SORTER_MMAP = 24;

const int SQLITE_TESTCTRL_IMPOSTER = 25;

const int SQLITE_TESTCTRL_PARSER_COVERAGE = 26;

const int SQLITE_TESTCTRL_RESULT_INTREAL = 27;

const int SQLITE_TESTCTRL_PRNG_SEED = 28;

const int SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS = 29;

const int SQLITE_TESTCTRL_SEEK_COUNT = 30;

const int SQLITE_TESTCTRL_TRACEFLAGS = 31;

const int SQLITE_TESTCTRL_TUNE = 32;

const int SQLITE_TESTCTRL_LOGEST = 33;

const int SQLITE_TESTCTRL_LAST = 33;

const int SQLITE_STATUS_MEMORY_USED = 0;

const int SQLITE_STATUS_PAGECACHE_USED = 1;

const int SQLITE_STATUS_PAGECACHE_OVERFLOW = 2;

const int SQLITE_STATUS_SCRATCH_USED = 3;

const int SQLITE_STATUS_SCRATCH_OVERFLOW = 4;

const int SQLITE_STATUS_MALLOC_SIZE = 5;

const int SQLITE_STATUS_PARSER_STACK = 6;

const int SQLITE_STATUS_PAGECACHE_SIZE = 7;

const int SQLITE_STATUS_SCRATCH_SIZE = 8;

const int SQLITE_STATUS_MALLOC_COUNT = 9;

const int SQLITE_DBSTATUS_LOOKASIDE_USED = 0;

const int SQLITE_DBSTATUS_CACHE_USED = 1;

const int SQLITE_DBSTATUS_SCHEMA_USED = 2;

const int SQLITE_DBSTATUS_STMT_USED = 3;

const int SQLITE_DBSTATUS_LOOKASIDE_HIT = 4;

const int SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5;

const int SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6;

const int SQLITE_DBSTATUS_CACHE_HIT = 7;

const int SQLITE_DBSTATUS_CACHE_MISS = 8;

const int SQLITE_DBSTATUS_CACHE_WRITE = 9;

const int SQLITE_DBSTATUS_DEFERRED_FKS = 10;

const int SQLITE_DBSTATUS_CACHE_USED_SHARED = 11;

const int SQLITE_DBSTATUS_CACHE_SPILL = 12;

const int SQLITE_DBSTATUS_MAX = 12;

const int SQLITE_STMTSTATUS_FULLSCAN_STEP = 1;

const int SQLITE_STMTSTATUS_SORT = 2;

const int SQLITE_STMTSTATUS_AUTOINDEX = 3;

const int SQLITE_STMTSTATUS_VM_STEP = 4;

const int SQLITE_STMTSTATUS_REPREPARE = 5;

const int SQLITE_STMTSTATUS_RUN = 6;

const int SQLITE_STMTSTATUS_FILTER_MISS = 7;

const int SQLITE_STMTSTATUS_FILTER_HIT = 8;

const int SQLITE_STMTSTATUS_MEMUSED = 99;

const int SQLITE_CHECKPOINT_PASSIVE = 0;

const int SQLITE_CHECKPOINT_FULL = 1;

const int SQLITE_CHECKPOINT_RESTART = 2;

const int SQLITE_CHECKPOINT_TRUNCATE = 3;

const int SQLITE_VTAB_CONSTRAINT_SUPPORT = 1;

const int SQLITE_VTAB_INNOCUOUS = 2;

const int SQLITE_VTAB_DIRECTONLY = 3;

const int SQLITE_VTAB_USES_ALL_SCHEMAS = 4;

const int SQLITE_ROLLBACK = 1;

const int SQLITE_FAIL = 3;

const int SQLITE_REPLACE = 5;

const int SQLITE_SCANSTAT_NLOOP = 0;

const int SQLITE_SCANSTAT_NVISIT = 1;

const int SQLITE_SCANSTAT_EST = 2;

const int SQLITE_SCANSTAT_NAME = 3;

const int SQLITE_SCANSTAT_EXPLAIN = 4;

const int SQLITE_SCANSTAT_SELECTID = 5;

const int SQLITE_SCANSTAT_PARENTID = 6;

const int SQLITE_SCANSTAT_NCYCLE = 7;

const int SQLITE_SCANSTAT_COMPLEX = 1;

const int SQLITE_SERIALIZE_NOCOPY = 1;

const int SQLITE_DESERIALIZE_FREEONCLOSE = 1;

const int SQLITE_DESERIALIZE_RESIZEABLE = 2;

const int SQLITE_DESERIALIZE_READONLY = 4;

const int NOT_WITHIN = 0;

const int PARTLY_WITHIN = 1;

const int FULLY_WITHIN = 2;

const int FTS5_TOKENIZE_QUERY = 1;

const int FTS5_TOKENIZE_PREFIX = 2;

const int FTS5_TOKENIZE_DOCUMENT = 4;

const int FTS5_TOKENIZE_AUX = 8;

const int FTS5_TOKEN_COLOCATED = 1;
